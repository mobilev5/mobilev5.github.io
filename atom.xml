<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>移动开发</title>
  <subtitle>Stay hungry. Stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-04T13:49:15.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>移动开发</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS技术周刊第6期</title>
    <link href="http://yoursite.com/2016/04/01/ios-technology-magazine-6/"/>
    <id>http://yoursite.com/2016/04/01/ios-technology-magazine-6/</id>
    <published>2016-03-31T16:00:00.000Z</published>
    <updated>2016-04-04T13:49:15.000Z</updated>
    
    <content type="html">&lt;p&gt;本周重点关注iPhone SE发售；SQLite的锁机制和WAL技术。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;本地数据存储&quot;&gt;&lt;a href=&quot;#本地数据存储&quot; class=&quot;headerlink&quot; title=&quot;本地数据存储&quot;&gt;&lt;/a&gt;本地数据存储&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuduo.me/2016/04/02/sqlitelockandwal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅析SQLite的锁机制和WAL技术&lt;/a&gt; SQLite的粗放型锁机制导致死锁的可能性，配合事务避免死锁。v3.7的WAL技术突破了处理高并发的瓶颈，极大的提升了性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Swift&quot;&gt;&lt;a href=&quot;#Swift&quot; class=&quot;headerlink&quot; title=&quot;Swift&quot;&gt;&lt;/a&gt;Swift&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;amp;mid=403153173&amp;amp;idx=1&amp;amp;sn=c631f95b28a0eb4b842a9494e43a30e5&amp;amp;scene=0#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Runtime分析：还像OC Runtime一样吗？&lt;/a&gt; 纯Swift没有动态特性，但可以通过在方法、属性前添加&lt;code&gt;dynamic&lt;/code&gt;修饰符来获取动态特性；继承Objective-C类后，继承的方法、属性有动态性，其他自定义方法、属性需要&lt;code&gt;dynamic&lt;/code&gt;修饰；Swift特有的类型无法获取动态性。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://onevcat.com/2016/03/swift-throws/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift 2 throws 全解析 - 从原理到实践&lt;/a&gt; 深入解析Swift 2的异常处理机制。喵大的原创文章，值得一读。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/swift-programming/why-swift-guard-should-be-avoided-484cfc2603c5#.hm25x0vl3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why Swift guard Should Be Avoided&lt;/a&gt; 对&lt;code&gt;guard&lt;/code&gt;的不同观点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;React-Native&quot;&gt;&lt;a href=&quot;#React-Native&quot; class=&quot;headerlink&quot; title=&quot;React-Native&quot;&gt;&lt;/a&gt;React-Native&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;amp;mid=403225766&amp;amp;idx=1&amp;amp;sn=acd8e3ab7f234b97827c3e210c2d8673&amp;amp;scene=4#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native痛点解析之开发环境搭建及扩展&lt;/a&gt; &lt;code&gt;Hello World&lt;/code&gt;是学习的开始，搭建环境是&lt;code&gt;Hello World&lt;/code&gt;的开始。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;网络交互&quot;&gt;&lt;a href=&quot;#网络交互&quot; class=&quot;headerlink&quot; title=&quot;网络交互&quot;&gt;&lt;/a&gt;网络交互&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;Http缓存策略详解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;后花园&quot;&gt;&lt;a href=&quot;#后花园&quot; class=&quot;headerlink&quot; title=&quot;后花园&quot;&gt;&lt;/a&gt;后花园&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;iPhone SE发售。“迄今最高性能的4英寸iPhone”、“一小部的一大步”。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/28/appstore-review-attention/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AppStore 审核经验总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本周重点关注iPhone SE发售；SQLite的锁机制和WAL技术。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS技术周刊" scheme="http://yoursite.com/tags/iOS%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>HTTP缓存策略</title>
    <link href="http://yoursite.com/2016/04/01/http-cache/"/>
    <id>http://yoursite.com/2016/04/01/http-cache/</id>
    <published>2016-03-31T16:00:00.000Z</published>
    <updated>2016-04-04T13:56:45.000Z</updated>
    
    <content type="html">&lt;p&gt;通过网络获取内容既缓慢，成本又高，有些响应需要在客户端和服务器之间进行多次往返通信，这拖延了浏览器可以使用和处理内容的时间，同时也增加了访问者的数据成本。因此，缓存和重用以前获取的资源的能力成为优化性能很关键的一个方面。&lt;/p&gt;
&lt;p&gt;HTTP 协议中定义了一些数据缓存的策略，每个浏览器都进行了实现。我们所要做的就是，确保每个服务器响应都提供正确的 HTTP 头，以指导浏览器何时可以缓存响应以及可以缓存多久。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;缓存方式&quot;&gt;&lt;a href=&quot;#缓存方式&quot; class=&quot;headerlink&quot; title=&quot;缓存方式&quot;&gt;&lt;/a&gt;缓存方式&lt;/h2&gt;&lt;p&gt;对于 HTTP Cache，我们最常用的有以下方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Last-Modified / If-Modified-Since (HTTP 1.0)&lt;/li&gt;
&lt;li&gt;ETag / If-None-Match (HTTP 1.1)&lt;/li&gt;
&lt;li&gt;Cache-Control (HTTP 1.1)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1、Last-Modified-If-Modified-Since-HTTP-1-0&quot;&gt;&lt;a href=&quot;#1、Last-Modified-If-Modified-Since-HTTP-1-0&quot; class=&quot;headerlink&quot; title=&quot;1、Last-Modified / If-Modified-Since (HTTP 1.0)&quot;&gt;&lt;/a&gt;1、Last-Modified / If-Modified-Since (HTTP 1.0)&lt;/h3&gt;&lt;p&gt;&lt;em&gt;不能减少请求，但是可以减少应用服务的重复计算，并减少返回数据流量。&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# response header&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Last-Modified: Mon, 03 Jan 2016 17:45:57 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# request header&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If-Modified-Since: Mon, 03 Jan 2016 17:45:57 GMT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果服务器每次都重新发送请求，获取完整的数据。这样做效率较低，因为如果资源未被更改过，就没有理由再去下载与缓存中已有的完全相同的字节。&lt;/p&gt;
&lt;p&gt;原理是：浏览器第二次请求一个资源，会带上上次请求返回的一些 HTTP 头： If-Modified-Since，服务端判断浏览器所请求资源在此期间是否发生了变化，如未变化，直接返回 304 和空body。&lt;/p&gt;
&lt;h3 id=&quot;2、-ETag-If-None-Match-HTTP-1-1&quot;&gt;&lt;a href=&quot;#2、-ETag-If-None-Match-HTTP-1-1&quot; class=&quot;headerlink&quot; title=&quot;2、 ETag / If-None-Match (HTTP 1.1)&quot;&gt;&lt;/a&gt;2、 ETag / If-None-Match (HTTP 1.1)&lt;/h3&gt;&lt;p&gt;&lt;em&gt;(Entity Tag) 和Last-Modified功能一致。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;不同于 Last-Modified，ETag 使用的是一个令牌值，这对于一些无法用时间来标识的资源为更方便。&lt;/p&gt;
&lt;h5 id=&quot;Request-Headers&quot;&gt;&lt;a href=&quot;#Request-Headers&quot; class=&quot;headerlink&quot; title=&quot;Request Headers&quot;&gt;&lt;/a&gt;Request Headers&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;If-None-Match:&amp;quot;1edec-3e3073913b100&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;Response&quot;&gt;&lt;a href=&quot;#Response&quot; class=&quot;headerlink&quot; title=&quot;Response&quot;&gt;&lt;/a&gt;Response&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# General&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Request URL:https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Request Method:GET&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Status Code:304 Not Modified&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Headers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETag:&amp;quot;1edec-3e3073913b100&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在请求中，多了一个 &lt;code&gt;If-None-Match&lt;/code&gt;，服务器端返回的 &lt;code&gt;Status Code&lt;/code&gt; 为 &lt;code&gt;304 Not Modified&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;3、Cache-Control-HTTP-1-1&quot;&gt;&lt;a href=&quot;#3、Cache-Control-HTTP-1-1&quot; class=&quot;headerlink&quot; title=&quot;3、Cache-Control (HTTP 1.1)&quot;&gt;&lt;/a&gt;3、Cache-Control (HTTP 1.1)&lt;/h3&gt;&lt;p&gt;&lt;em&gt;真正减少请求数量。指定客户端什么要缓存，什么不要。而且可以指定中间设备是否应该缓存（路由器，CDN等）。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Cache-Directive 有很多值，可以用来配置缓存的策略。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no-cache / no-store：&lt;ul&gt;
&lt;li&gt;no-cache：这个很容易让人产生误解，使人误以为是响应不被缓存。实际上 no-cache 是会被缓存的，只不过每次在向客户端（浏览器）提供响应数据时，缓存都要向服务器评估缓存响应的有效性。？？？？如果有了 etag，还要 no-cache 干啥？&lt;/li&gt;
&lt;li&gt;no-store：这个才是响应不被缓存的意思。每个请求必须获取完整的响应。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;public / private：&lt;ul&gt;
&lt;li&gt;public 意思是中间服务设备（路由器，CDN）能缓存内容。&lt;ul&gt;
&lt;li&gt;private 是指只有用户浏览器才可以缓存。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;must-revalidation / proxy-revalidation &lt;ul&gt;
&lt;li&gt;如果缓存的内容失效，请求必须发送到服务器/代理以进行重新验证。如果失效，本身就是要重新验证的。。。为什么还要 must-revalidation?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;max-age&lt;ul&gt;
&lt;li&gt;max-age=xxx (xxx 为数值) 缓存的内容将在 xxx 秒后失效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4、HTTP-1-1-Protocol&quot;&gt;&lt;a href=&quot;#4、HTTP-1-1-Protocol&quot; class=&quot;headerlink&quot; title=&quot;4、HTTP/1.1 Protocol&quot;&gt;&lt;/a&gt;4、HTTP/1.1 Protocol&lt;/h3&gt;&lt;p&gt;HTTP/1.1 规范中定义了新的规范，取代了之前用来定义响应缓存策略的头.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ETag / If-None-Match (HTTP 1.1)&lt;/li&gt;
&lt;li&gt;Cache-Control (HTTP 1.1)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前的所有浏览器都支持 Cache-Control，因此，使用它就够了。新的规范会重写旧的值（Cache-Control 会重写 Expires 的规则）。&lt;/p&gt;
&lt;h2 id=&quot;最优策略&quot;&gt;&lt;a href=&quot;#最优策略&quot; class=&quot;headerlink&quot; title=&quot;最优策略&quot;&gt;&lt;/a&gt;最优策略&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http-cache-decision-tree.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;参见：&quot;&gt;&lt;a href=&quot;#参见：&quot; class=&quot;headerlink&quot; title=&quot;参见：&quot;&gt;&lt;/a&gt;参见：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP 缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/increasing-application-performance-with-http-cache-headers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Increasing Application Performance with HTTP Cache Headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通过网络获取内容既缓慢，成本又高，有些响应需要在客户端和服务器之间进行多次往返通信，这拖延了浏览器可以使用和处理内容的时间，同时也增加了访问者的数据成本。因此，缓存和重用以前获取的资源的能力成为优化性能很关键的一个方面。&lt;/p&gt;
&lt;p&gt;HTTP 协议中定义了一些数据缓存的策略，每个浏览器都进行了实现。我们所要做的就是，确保每个服务器响应都提供正确的 HTTP 头，以指导浏览器何时可以缓存响应以及可以缓存多久。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Android技术周刊第9期</title>
    <link href="http://yoursite.com/2016/03/28/android-technology-magazine-9/"/>
    <id>http://yoursite.com/2016/03/28/android-technology-magazine-9/</id>
    <published>2016-03-27T16:00:00.000Z</published>
    <updated>2016-04-04T13:22:19.000Z</updated>
    
    <content type="html">&lt;p&gt;本期重点推荐&lt;a href=&quot;http://sookocheff.com/post/java/why-java/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why Java? Tales from a Python Convert&lt;/a&gt;.   他说：别一直说Java太烦，你认真地了解过今日的Java吗？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;BestArticle&quot;&gt;&lt;a href=&quot;#BestArticle&quot; class=&quot;headerlink&quot; title=&quot;BestArticle&quot;&gt;&lt;/a&gt;BestArticle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&amp;amp;mid=403155342&amp;amp;idx=1&amp;amp;sn=ded3478819cbb3d0ae10b9560e48542e&amp;amp;scene=0&amp;amp;key=710a5d99946419d903380083b076cca90a55d8feb7db4721db6abba41e349d0d5899deb59d2e1221553a2cf5a942d316&amp;amp;ascene=0&amp;amp;uin=MTkyODkzMzg4MA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 6.0 对于权限和标识符的更改&lt;/a&gt; 在 Marshmallow 中，权限请求已从安装时改到运行时。 这是 SDK 23+ 的一项强制性改动，意味着它会影响所有以 Android 6.0 作为目标平台的开发者和应用。无论如何，您的应用都需要更新，因此，您的挑战在于审慎地进行更新。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/instance-id/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is Instance ID?&lt;/a&gt; Instance ID provides a unique ID per instance of your apps. You can implement Instance ID for Android and iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Commit message 和 Change log 编写指南&lt;/a&gt; 阮一峰关于Git Commit message 和 Change log的一些看法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.it165.net/pro/html/201503/37225.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何安装ACRA一个Android应用Crash跟踪系统&lt;/a&gt; 可以毫不犹豫地说，一个手机应用最严重的问题莫过于崩溃，那你是否曾经考虑过搭建&lt;code&gt;崩溃追踪系统&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sookocheff.com/post/java/why-java/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why Java? Tales from a Python Convert&lt;/a&gt; Java已经今非昔比&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FantasticLibs&quot;&gt;&lt;a href=&quot;#FantasticLibs&quot; class=&quot;headerlink&quot; title=&quot;FantasticLibs&quot;&gt;&lt;/a&gt;FantasticLibs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/riul88/call-recorder-for-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;call-recorder-for-android&lt;/a&gt; his android application allows you to record all incoming and outgoing calls from your phone. All your recorded calls are saved in 3gp files and can be sent from the application.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Bilibili/ijkplayer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ijkplayer&lt;/a&gt; Android/iOS video player based on FFmpeg n2.8, with MediaCodec, VideoToolbox support.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bytedeco/javacpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;javacpp&lt;/a&gt; The missing bridge between Java and native C++&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dropbox/djinni&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Djinni&lt;/a&gt; Djinni is a tool for generating cross-language type declarations and interface bindings. It’s designed to connect C++ with either Java or Objective-C. Python support is available in an experimental version on the python branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HotNews&quot;&gt;&lt;a href=&quot;#HotNews&quot; class=&quot;headerlink&quot; title=&quot;HotNews&quot;&gt;&lt;/a&gt;HotNews&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AutumnsWind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这位会coding的妹纸叫秋风&lt;/a&gt; 听说这位妹纸的编程功底很强，特喜欢猫，你敢看吗？&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cctalk.com/course/160751202367/#tab_play&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016互联网设计趋势探讨&lt;/a&gt; 2016互联网设计趋势探讨在刚刚过去的2015年，互联网开始侵入更多的产业领域，越来越多创新的移动互联网产品和服务正在加速改变着人们的生活。在这些产品中，除了产品形态、商业模式与服务体验的创新之外，产品设计本身也越来越多的迸发出新的创意和趋势&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MjA2NzY0OQ==&amp;amp;mid=402694953&amp;amp;idx=1&amp;amp;sn=acffd7e2bff55b999b4290b4951ab30c&amp;amp;scene=23&amp;amp;srcid=0322SvcHMWtejsv4b3VpfIvR#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序bug导致了天大的损失，要枪毙程序猿吗？&lt;/a&gt; 如果程序的bug导致了巨大的经济损失，应该由谁来承担？用户？运营商？还是系统开发商？&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本期重点推荐&lt;a href=&quot;http://sookocheff.com/post/java/why-java/#&quot;&gt;Why Java? Tales from a Python Convert&lt;/a&gt;.   他说：别一直说Java太烦，你认真地了解过今日的Java吗？&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android技术周刊" scheme="http://yoursite.com/tags/Android%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>AppStore 审核经验总结</title>
    <link href="http://yoursite.com/2016/03/28/appstore-review-attention/"/>
    <id>http://yoursite.com/2016/03/28/appstore-review-attention/</id>
    <published>2016-03-27T16:00:00.000Z</published>
    <updated>2016-03-30T14:28:28.000Z</updated>
    
    <content type="html">&lt;p&gt;提审是iOS app上架前的必经之路，95%的应用在第一次审核的时候会被打回，让我们一起看下审核中可能遇到的问题以及对应的解决办法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h2&gt;&lt;h3 id=&quot;低级问题&quot;&gt;&lt;a href=&quot;#低级问题&quot; class=&quot;headerlink&quot; title=&quot;低级问题&quot;&gt;&lt;/a&gt;低级问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;APP存在bug。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：修复bug。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“iPhone” “iPad”等专业字样写错。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：修正。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据存储违反《iOS Data Storage Guidelines》。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：仔细阅读条款，特别注意临时数据的存储位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;图片、文字含安卓信息。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：去除相应描述。        &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;应用内含有beta字样。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：完整app功能，去除beta字样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;有检测更新功能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：去除检测提醒。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;高级问题&quot;&gt;&lt;a href=&quot;#高级问题&quot; class=&quot;headerlink&quot; title=&quot;高级问题&quot;&gt;&lt;/a&gt;高级问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;需要账号的应用没有提供测试账号。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：凡是涉及到用户登录的APP必须提供有效的测试账号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内购产品被赠送。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：调整APP规则，不能赠送IAP可购买的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;iPhone程序不能在iPad运行或者运行异常。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：修复兼容性问题，不要求应用适配iPad，但是需要应用可以在iPad中以兼容模式运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;提示用户好评打分。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：应用中不能出现引导让用户好评，可以去评论，但是不能是给好评。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;产品仅提供手机号注册，要求提供账号。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：苹果不允许只有手机号注册，需要提供邮箱或者用户名等注册方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;提供了月卡功能，但是不支持玩家在不同设备中使用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  解决方法：这个问题相当棘手，月卡功能是通过iap支付的可恢复的产品。iap支付只和AppleID相关，和应用中的ID没有关系，所以应用中应该避免使用直接购买月卡的功能，以免遇到相关逻辑问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实际经验分享&quot;&gt;&lt;a href=&quot;#实际经验分享&quot; class=&quot;headerlink&quot; title=&quot;实际经验分享&quot;&gt;&lt;/a&gt;实际经验分享&lt;/h2&gt;&lt;h3 id=&quot;IAP支付需求&quot;&gt;&lt;a href=&quot;#IAP支付需求&quot; class=&quot;headerlink&quot; title=&quot;IAP支付需求&quot;&gt;&lt;/a&gt;IAP支付需求&lt;/h3&gt;&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;网校的APP有出售课程的功能，使用的支付方式是第三方支付。在审核过程中使用开关，关闭了购买的入口，只有内容介绍。结果被拒。&lt;/p&gt;
&lt;h4 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h4&gt;&lt;p&gt;起初使用开关控制入口是可以的，但是突然某一次提审苹果认为应用存在支付，并且需要接入IAP。其中有个比较致命的问题是，应用内出现了促销信息，信息中包含了价格。一旦苹果认准了的问题，简单的去除和沟通几乎是不可能解决的。&lt;/p&gt;
&lt;h4 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h4&gt;&lt;p&gt;经过研究，我们增加了特定的应用内购商品，并且通过了审核。以下是解决方案的要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;增加代币购买，使用IAP购买。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  为什么增加的是代币不是直接购买商品？&lt;/p&gt;
&lt;p&gt;  首先，代币是消耗品，和应用的账号做绑定，这样苹果理解起来简单。如果直接购买商品，苹果就会引商品的性质做一系列理解，万一出现非消耗品，那就要做IAP中的恢复购买，这点非常麻烦。&lt;/p&gt;
&lt;p&gt;  其次，代币购买的商品可以自由变更。每个IAP的商品需要上传苹果后台，并且审核。如果我们直接购买商品，那么每个商品都要上传审核，后期维护十分麻烦。如果是代币，一次定义，以后就只要调整可购买的内容就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;增加特定商品，仅供代币购买。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  苹果希望所有IAP购买的商品只能在苹果设备使用。所以最好的策略是，IAP购买的商品是独立的，其他平台无法购买，也无法使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;增加开关，控制商品显示。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  IAP支付并不能很好的在实际购买中使用，所以它只是为了审核特别存在的。如何启用第三方支付，购买更多普通课程，才是需要我们考虑的。在此，我们使用了开关，用来显示/隐藏普通商品的显示和购买。&lt;/p&gt;
&lt;p&gt;  从苹果审核过程中的反馈可以看出，苹果意识到应用商会使用开关的方式去做很多事情。比如，显示额外信息、跳转safari显示更多内容等。虽然苹果禁止，但是也有事后包容。所以推荐应用有这么一个开关，具体开关哪些东西就由产品定位考虑了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;账户登录问题&quot;&gt;&lt;a href=&quot;#账户登录问题&quot; class=&quot;headerlink&quot; title=&quot;账户登录问题&quot;&gt;&lt;/a&gt;账户登录问题&lt;/h3&gt;&lt;h4 id=&quot;背景-1&quot;&gt;&lt;a href=&quot;#背景-1&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;p&gt;苹果允许应用存在注册登录，但是不允许应用在使用他们看似和账号无关的功能时要求登录。&lt;/p&gt;
&lt;p&gt;实际场景如下：主页中有个商品，匿名户点击购买，然后应用弹出了登录框。这个流程及其普遍，而且这个登录的用意也很好理解。但是如果这个商品使用IAP支付，那么苹果就认为这个过程非法。他们会说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;17.2 Details,&lt;br&gt;We noticed that your app requires users to register with personal information to access non account-based features, which is not allowed on the App Store.&lt;br&gt;Specifically, your app requires users to register prior to In App Purchase. We’ve attached screenshot(s) for your reference.&lt;br&gt;Apps cannot require user registration prior to allowing access to app content and features that are not associated specifically to the user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh my god~~&lt;/p&gt;
&lt;h4 id=&quot;原因分析-1&quot;&gt;&lt;a href=&quot;#原因分析-1&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h4&gt;&lt;p&gt;苹果认为IAP本身是不需要用户登录的。因为这个是苹果提供的支付方法，和应用本身的账号无关。这个解释我们虽然看得懂，但是非常难理解。&lt;/p&gt;
&lt;h4 id=&quot;解决方案-1&quot;&gt;&lt;a href=&quot;#解决方案-1&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h4&gt;&lt;p&gt;为此我们使用了几种方式去解决，供大家参考选用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;触发入口的隐藏/显示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  这个方法很好理解。应用在用户未登录的情况下，隐藏商品的购买按钮。这样应用看上去就像是一个信息浏览工具，并没有支付功能。当用户登录了账号，这个购买按钮显示。&lt;/p&gt;
&lt;p&gt;  我们使用这个机制的触发入口有几种，收藏夹入口、购买入口、充值入口等。基本和账号相关的都使用了。&lt;/p&gt;
&lt;p&gt;  去年9月，在使用这种机制情况下，我们通过了审核。并且是在苹果质疑过我们关于账号登录相关问题的情况下通过的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;匿名用户登录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在经过几个版本的迭代后，今年3月苹果突然质疑了我们显示、隐藏入口的做法。他们的理解是，在用户不登录的情况，应用有bug，没有显示入口，属于功能不完整。&lt;/p&gt;
&lt;p&gt;  经过几次挣扎，根据以往的经验，我们决定使用匿名登录的方式，彻底解决这个问题。&lt;/p&gt;
&lt;p&gt;  匿名登录本身使用了登录模块的匿名登录方法。登录模块在匿名登录后会返回有效的token，这是解决问题的关键。这个token可以让应用本身感受不到用户的特殊，当作一般登录用户处理就可以了。匿名登录是以deviceId生成一个用户账号，所以就算审核的过程中苹果删除应用，也不会出现账号混乱的情况。&lt;/p&gt;
&lt;p&gt;  这里有个前提，这种机制是需要配合送审开关的。只有在送审的时候才能使用匿名登录，审核后，上线前必须关闭。&lt;/p&gt;
&lt;p&gt;  增加了这个机制后，整个应用的用户体验就会非常流畅。安装后打开，应用会静默登录，用户无任何感知。在使用应用的过程中也不会有账号退出登录相关的操作。应用几乎是账号无关的，然而用户的信息又都能保存，无论是购买内容还是收藏夹。&lt;/p&gt;
&lt;p&gt;  至此，完全解决了账号相关的问题，而且效果也比较完美。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;附录：重点审核条款&quot;&gt;&lt;a href=&quot;#附录：重点审核条款&quot; class=&quot;headerlink&quot; title=&quot;附录：重点审核条款&quot;&gt;&lt;/a&gt;附录：重点审核条款&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2.2 Apps that exhibit bugs will be rejected&lt;/p&gt;
&lt;p&gt;  译文：存在错误的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.9 Apps that are “demo”, “trial”, or “test” versions will be rejected. Beta Apps may only be submitted through TestFlight and must follow the TestFlight guidelines&lt;/p&gt;
&lt;p&gt;  译文：Demo版、trial版和test版的程序将会被拒绝。Beta版应用程序可通过TestFlight提交，并且必须遵守相关指南。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.17 Apps that browse the web must use the iOS WebKit framework and WebKit Javascript&lt;/p&gt;
&lt;p&gt;  译文：应用程序只允许使用iOS WebKit框架和WebKit Javascript浏览web内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.23 Apps must follow the iOS Data Storage Guidelines or they will be rejected&lt;/p&gt;
&lt;p&gt;  译文：应用必须遵守iOS数据储存指导方针(iOS Data Storage Guidelines)，否则应用将被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.1 Apps or metadata that mentions the name of any other mobile platform will be rejected&lt;/p&gt;
&lt;p&gt;  译文：应用或者元数据中提到其他任何移动平台将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.3 Apps with names, descriptions, screenshots, or previews not relevant to the content and functionality of the App will be rejected&lt;/p&gt;
&lt;p&gt;  译文：应用程序的名称、描述、截图或者预览与应用的内容和功能不相关将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.6 Apps cannot use Push Notifications to send advertising, promotions, or direct marketing of any kind&lt;/p&gt;
&lt;p&gt;  译文：应用程序不可使用推送通知发送广告、促销或任何类型的直销信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.1 Apps that unlock or enable additional features or functionality with mechanisms other than the App Store will be rejected&lt;/p&gt;
&lt;p&gt;  译文：使用App Store以外的渠道解锁或开启附加属性和功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.2 Apps utilizing a system other than the In-App Purchase API (IAP) to purchase content, functionality, or services in an App will be rejected&lt;/p&gt;
&lt;p&gt;  译文：使用应用内支付系统(IAP)以外的系统购买内容、功能或服务的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.7 Apps that use IAP to purchase items must assign the correct Purchasability type&lt;/p&gt;
&lt;p&gt;  译文：使用IAP购买项目的应用程序必须指派正确的购买类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.8 Apps that use IAP to purchase access to built-in capabilities provided by iOS, watchOS, and tvOS, such as the camera or the gyroscope, or Apple-branded peripherals, such as Apple Pencil or Apple Keyboard, will be rejected&lt;/p&gt;
&lt;p&gt;  译文：使用IAP购买iOS内置功能(如照相机，陀螺仪)的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.11 In general, the more expensive your App, the more thoroughly we will review it&lt;/p&gt;
&lt;p&gt;  译文：一般而言，你的应用程序越贵，我们的评审会越深入。(对不起，我们国产大部分是免费网游)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.13 Apps that link to external mechanisms for purchases or subscriptions to be used in the App, such as a “buy” button that goes to a web site to purchase a digital book, will be rejected&lt;/p&gt;
&lt;p&gt;  译文：在应用内使用跳转至外部购买或订阅链接的应用将会被拒，比如”buy”按钮跳转至一个购买电子书的web页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.2 Apps that require users to share personal information, such as email address and date of birth, in order to function will be rejected&lt;/p&gt;
&lt;p&gt;  译文：要求用户共享电子邮箱地址和出生日期等私人信息才可使用其功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.5 Apps that include account registration or access a user’s existing account must include a privacy policy or they will be rejected&lt;/p&gt;
&lt;p&gt;  译文：包含账号注册或者访问用户现有账号的应用程序必须包含隐私策略，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;29.1 Apps containing references or commentary about a religious, cultural or ethnic group that are defamatory, offensive, mean-spirited or likely to expose the targeted group to harm or violence will be rejected&lt;/p&gt;
&lt;p&gt;  译文：使用Apple Pay的应用程序必须在出售任何商品或者服务之前为用户提供所有材料的购买信息，否则将会被拒绝。使用Apple Pay进行定期付款的应用程序必须提供最低限度续费期限，付费将持续直至被取消，每个阶段所付款额，费用付款归属，以及如何取消等。(增加了对于定期付款的规定)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;提审是iOS app上架前的必经之路，95%的应用在第一次审核的时候会被打回，让我们一起看下审核中可能遇到的问题以及对应的解决办法。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="疑难杂症" scheme="http://yoursite.com/tags/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
  </entry>
  
  <entry>
    <title>iOS技术周刊第5期</title>
    <link href="http://yoursite.com/2016/03/27/ios-technology-magazine-5/"/>
    <id>http://yoursite.com/2016/03/27/ios-technology-magazine-5/</id>
    <published>2016-03-26T16:00:00.000Z</published>
    <updated>2016-03-27T11:58:01.000Z</updated>
    
    <content type="html">&lt;p&gt;本周重点关注iOS 9.3，iPhone SE，Azer NPM撤包事件；iOS 微信浏览器打开App的解决方案；现有 iOS 端图片缓存解决方案&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;新闻&quot;&gt;&lt;a href=&quot;#新闻&quot; class=&quot;headerlink&quot; title=&quot;新闻&quot;&gt;&lt;/a&gt;新闻&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stepanhruda/dyld-image-loading-performance?utm_campaign=iOS%2BDev%2BWeekly&amp;amp;utm_medium=email&amp;amp;utm_source=iOS_Dev_Weekly_Issue_243&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS 9.3 中的动态库加载速度&lt;/a&gt; 本周 iOS 更新到了 9.3，这个代码库发现在 iOS 9.3 中，动态库的加载速度比之前快了 75% 左右。&lt;/li&gt;
&lt;li&gt;Azer NPM 撤包事件 &lt;a href=&quot;http://zhuanlan.zhihu.com/codestory/20669077&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接1&lt;/a&gt; &lt;a href=&quot;http://zhuanlan.zhihu.com/ibuick/20671763&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接2&lt;/a&gt; 这是本周发生在 Node 社区中的一件大事情。作者因为对 NPM 公司处理版权问题的不满，撤下了自己所有的代码，导致很多著名项目如 Babel、React Native 等因为依赖问题而无法正常使用。这也引起了人们对于集中式依赖管理器的思考——看来通过 CocoaPods 引用的项目很有必要将第三方的代码也一起放进自己的仓库中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;综合&quot;&gt;&lt;a href=&quot;#综合&quot; class=&quot;headerlink&quot; title=&quot;综合&quot;&gt;&lt;/a&gt;综合&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/23/wexin-open-app/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS 微信浏览器直接打开 App 的解决方案&lt;/a&gt; 本文介绍了如何通过 iOS 9 中的 Universal Links 特性来突破微信浏览器的限制，直接在微信跳转至自己的 app。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scottberrevoets.com/2016/03/21/outlets-strong-or-weak/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Outlets: Strong! Or Weak?&lt;/a&gt; 通过 @IBOutlet 定义的变量，到底应该是 strong 还是 weak 呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;网络交互&quot;&gt;&lt;a href=&quot;#网络交互&quot; class=&quot;headerlink&quot; title=&quot;网络交互&quot;&gt;&lt;/a&gt;网络交互&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP 缓存&lt;/a&gt; Google 对于 HTTP 缓存机制的介绍。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/22/image-cache-solution/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;现有 iOS 端图片缓存解决方案&lt;/a&gt; 移动 App 中使用网络图片的情况很常见，如果缓存问题处理不好会很大程度上影响 App 的性能。本文简单介绍一下图片缓存流程及 GitHub 上现有解决方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;逆向&quot;&gt;&lt;a href=&quot;#逆向&quot; class=&quot;headerlink&quot; title=&quot;逆向&quot;&gt;&lt;/a&gt;逆向&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/24/crack-share/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;逆向工程实战分享&lt;/a&gt; 本文介绍了逆向工程的基本概念，以及分享一个逆向工程的实例。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Swift&quot;&gt;&lt;a href=&quot;#Swift&quot; class=&quot;headerlink&quot; title=&quot;Swift&quot;&gt;&lt;/a&gt;Swift&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://swift.org/blog/swift-2-2-released/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift 2.2 发布&lt;/a&gt; Swift 2.2 发布，比较大的变化是用 &lt;code&gt;associatedtype&lt;/code&gt; 代替了原先的 &lt;code&gt;typealias&lt;/code&gt; 关键字；以及用 &lt;code&gt;#selector&lt;/code&gt; 来指定 Objective-C 中的 selector。文章中有更详细的更新内容。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pspdfkit.com/blog/2016/surprises-with-swift-extensions/?utm_campaign=iOS%2BDev%2BWeekly&amp;amp;utm_medium=web&amp;amp;utm_source=iOS_Dev_Weekly_Issue_243&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Surprises with Swift Extensions&lt;/a&gt; 如果通过 Swift 给 Objective-C 中的类加扩展仍然需要添加前缀。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hybrid&quot;&gt;&lt;a href=&quot;#Hybrid&quot; class=&quot;headerlink&quot; title=&quot;Hybrid&quot;&gt;&lt;/a&gt;Hybrid&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/teach-code/your-hybrid-app-is-going-to-kill-you-416041d27eac#.hzajpo3y1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;You Hybrid App is Going to Kill You&lt;/a&gt; 关于 Hybrid 应用，来听听一些不同的声音。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;页面布局&quot;&gt;&lt;a href=&quot;#页面布局&quot; class=&quot;headerlink&quot; title=&quot;页面布局&quot;&gt;&lt;/a&gt;页面布局&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mirego/MCUIViewLayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MCUIViewLayout&lt;/a&gt; 一个页面布局的框架。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;动画&quot;&gt;&lt;a href=&quot;#动画&quot; class=&quot;headerlink&quot; title=&quot;动画&quot;&gt;&lt;/a&gt;动画&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jackrabbitmobile.com/design/ios-bubble-animation-tutorial/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Bubble Animation Tutorial&lt;/a&gt; 一个实现气泡动画的教程。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本周重点关注iOS 9.3，iPhone SE，Azer NPM撤包事件；iOS 微信浏览器打开App的解决方案；现有 iOS 端图片缓存解决方案&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS技术周刊" scheme="http://yoursite.com/tags/iOS%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>逆向工程实战分享</title>
    <link href="http://yoursite.com/2016/03/24/crack-share/"/>
    <id>http://yoursite.com/2016/03/24/crack-share/</id>
    <published>2016-03-23T16:00:00.000Z</published>
    <updated>2016-03-27T12:13:03.000Z</updated>
    
    <content type="html">&lt;p&gt;逆向工程一般说来就是在没有源代码的情况下，通过一定手段分析软件结构，挖掘出有用的信息或绕过软件自身的一些限制。目前对逆向的研究主要集中在Windows, Android，Mac和iOS这几个平台，各平台的发展也参差不齐。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;对Windows平台的研究可以追溯到win32时代，因此目前发展比较成熟，而且拥有大量的工具和插件，比较有名的工具如ollydbg和ida pro。魔高一尺道高一丈,在逆向研究发展的火热的同时对软件的保护的研究也迅速发展起来。目前Windows下的收费软件大多数都有一定的保护措施如加壳，对逆向的研究增加了一些难度。&lt;/li&gt;
&lt;li&gt;Android是一个后兴起的平台，由于拥有大量的用户，所以对Android的逆向也很成熟。Android app 逆向后是一种高层次的汇编语言，也有一些工具可将之转换为更高级的java语言，虽然有部分代码混淆，但是可以很方便的注入代码，因此逆向相对容易一些。Android逆向一般要经过反编译，dex转换，代码修改，重新打包，重新签名，运行调试这几个过程。&lt;/li&gt;
&lt;li&gt;mac平台用的人更少，对之研究相对少些，不过Windows平台的技术可以借鉴，只不过逆向的工具或插件比较少，好在这个平台的大多数软件都没有壳，难度系数一般。&lt;/li&gt;
&lt;li&gt;iOS未接触, 但感觉跟Mac平台的逆向差不多&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开始真正的逆向之前先逆向一个简单的程序&quot;&gt;&lt;a href=&quot;#开始真正的逆向之前先逆向一个简单的程序&quot; class=&quot;headerlink&quot; title=&quot;开始真正的逆向之前先逆向一个简单的程序&quot;&gt;&lt;/a&gt;开始真正的逆向之前先逆向一个简单的程序&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// return a &amp;gt; b ? a : b;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (a &amp;gt; b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; result = max(&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Result: &quot;&lt;/span&gt; &amp;lt;&amp;lt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;未优化编译并逆向后的主要代码如下（在右侧增加了一些注释）:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__Z3maxii:        // max(int, int)    ; have 8B on stack or two vars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010d0         push       rbp         ; XREF=0x1000000d0, _main+25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010d1         mov        rbp, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010d4         mov        dword [ss:rbp+var_8], edi ; assign first var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010d7         mov        dword [ss:rbp+var_C], esi ; assign second var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010da         mov        esi, dword [ss:rbp+var_8] ; stack: rbp, rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010dd         cmp        esi, dword [ss:rbp+var_C]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010e0         jle        0x1000010f1 ; &amp;gt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010e6         mov        eax, dword [ss:rbp+var_8]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010e9         mov        dword [ss:rbp+var_4], eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010ec         jmp        0x1000010f7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010f1         mov        eax, dword [ss:rbp+var_C] ; XREF=__Z3maxii+16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010f4         mov        dword [ss:rbp+var_4], eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010f7         mov        eax, dword [ss:rbp+var_4] ; XREF=__Z3maxii+28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010fa         pop        rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;00000001000010fb         ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_main:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001100         push       rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001101         mov        rbp, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001104         sub        rsp, 0x10   ; alloc some memory on stack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001108         mov        edi, 0x38   ; argument #1 for method __Z3maxii&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000110d         mov        esi, 0x20   ; argument #2 for method __Z3maxii&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001112         mov        dword [ss:rbp+var_4], 0x0 ; init a var with 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001119         call       __Z3maxii   ; max(int, int) ; result assigned to eax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000111e         mov        rdi, qword [ds:imp___got___ZNSt3__14coutE] ; load object(cout) address&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001125         lea        rsi, qword [ds:0x100001f3c]  ; &amp;quot;Result: &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000112c         mov        dword [ss:rbp+var_8], eax ; max result assign to 2th var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000112f         call       imp___stubs___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::basic_ostream&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt; &amp;gt;&amp;amp; std::__1::operator&amp;lt;&amp;lt; &amp;lt;std::__1::char_traits&amp;lt;char&amp;gt; &amp;gt;(std::__1::basic_ostream&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt; &amp;gt;&amp;amp;, char const*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001134         mov        esi, dword [ss:rbp+var_8]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001137         mov        rdi, rax ; eax != rdi, cout object has changed &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000113a         call       imp___stubs___ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt; &amp;gt;::operator&amp;lt;&amp;lt;(int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000113f         xor        esi, esi ; reset&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001141         mov        qword [ss:rbp+var_10], rax ; assign result(output stream) to  last var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001145         mov        eax, esi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000100001147         add        rsp, 0x10 ; balance stack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000114b         pop        rbp       ; restore rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010000114c         ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;理解上面的代码需要注意一些调用规定，上面的代码使用的fastcall调用约定&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用约定&lt;ul&gt;
&lt;li&gt;stdcall 参数从右向左压入堆栈；函数自身平衡堆栈；&lt;/li&gt;
&lt;li&gt;cdecl 参数首先由有向左压入堆栈；调用者负责平衡堆栈&lt;/li&gt;
&lt;li&gt;fastcall 使用寄存器传递参数        &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实战Reveal-Download-from-offical-website&quot;&gt;&lt;a href=&quot;#实战Reveal-Download-from-offical-website&quot; class=&quot;headerlink&quot; title=&quot;实战Reveal Download from offical website&quot;&gt;&lt;/a&gt;实战Reveal &lt;a href=&quot;http://revealapp.com/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Download from offical website&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;本次破解使用的reveal版本是1.6.3(5790)，也是目前的最新版。由于编写一个注册机的难度较高，本次破解只是针对打补丁的方式，想挑战的话可以尝试编写一个注册机。&lt;/p&gt;
&lt;h3 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h3&gt;&lt;p&gt;工欲善其事，必先利其器，mac下的破解工具主要有俩个，一个是hopper，另外一个是ida pro。本次破解使用hopper，这个软件更容易上手，注意需要装额外的调试工具，也可从官网下载到。&lt;/p&gt;
&lt;h3 id=&quot;破解流程&quot;&gt;&lt;a href=&quot;#破解流程&quot; class=&quot;headerlink&quot; title=&quot;破解流程&quot;&gt;&lt;/a&gt;破解流程&lt;/h3&gt;&lt;h4 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;直接打开Reveal, 复制提示的字符串&lt;code&gt;Your free trial of Reveal has expire&lt;/code&gt;，也可能是其它的，取决于你的reveal是否过期&lt;/li&gt;
&lt;li&gt;使用Hopper加载Reveal，&lt;a href=&quot;http://pan.baidu.com/s/1mh5K1Hu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;搜索前面复制的字符串&lt;code&gt;Your free trial of Reveal has expire&lt;/code&gt;，跳到引用该字符串的地方，这时会跳到&lt;code&gt;[IBATrialModeReminderWindowController trialExpiresTitle]&lt;/code&gt;·函数中间的某个地方，查找函数调用的对照，只要在根源处注释掉即可达到破解的目的&lt;/li&gt;
&lt;li&gt;继续查找引用或调用这个函数·trialExpiresTitle·的地方，没有找到。换个思路，搜索字符串&lt;code&gt;IBATrialModeReminderWindowController&lt;/code&gt;，这是会调到&lt;code&gt;[IBATrialModeReminderWindowController controller]&lt;/code&gt;函数里面&lt;/li&gt;
&lt;li&gt;继续向上查找调用该函数&lt;code&gt;[IBATrialModeReminderWindowController controller]&lt;/code&gt;的地方，会跟进这个函数&lt;code&gt;[IBATrialModeReminderPresenter showTrialModeSheetForWindow:]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;继续向上查找，会进入&lt;code&gt;[IBATrialModeReminderPresenter presentTrialModeReminderIfNecessaryForWindow:]&lt;/code&gt;·这个函数，观察如下的代码，已经定位到我们想要的地方&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;000000010007f306         mov        r14, rax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f309         mov        rsi, qword [ds:0x1001b3150]                 ; @selector(shouldShowTrialModeSheet), argument &amp;quot;selector&amp;quot; for method imp___got__objc_msgSend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f310         mov        rdi, rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f313         call       qword [ds:imp___got__objc_msgSend]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f319         test       al, al&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f31b         je         0x10007f330&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f31d         mov        rsi, qword [ds:0x1001b3158]                 ; @selector(showTrialModeSheetForWindow:), argument &amp;quot;selector&amp;quot; for method imp___got__objc_msgSend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f324         mov        rdi, rbx                                    ; argument &amp;quot;instance&amp;quot; for method imp___got__objc_msgSend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f327         mov        rdx, r14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f32a         call       qword [ds:imp___got__objc_msgSend]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f330         mov        rdi, r14                                    ; argument &amp;quot;instance&amp;quot; for method imp___got__objc_release, XREF=-[IBATrialModeReminderPresenter presentTrialModeReminderIfNecessaryForWindow:]+40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f333         pop        rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f334         pop        r14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f336         pop        rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007f337         jmp        qword [ds:imp___got__objc_release]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;注意地址000000010007f31b处的代码&lt;code&gt;je 0x10007f330&lt;/code&gt;，如果不跳转回执行下面的代码就会显示提示对话框，因此把条件取反，或者无条件跳转改成&lt;code&gt;jmp je 0x10007f330&lt;/code&gt;即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h4&gt;&lt;p&gt;如果觉得上面步骤繁琐的话，其实还有更简单的方法，按照一般的编程思维，一般都会写一个shouldShow…的方法来显示提示对话框，所以直接搜索字符串·shouldShow·，调到这个函数&lt;code&gt;[IBATrialModeReminderPresenter shouldShowTrialModeSheet]&lt;/code&gt;，这个函数的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-[IBATrialModeReminderPresenter shouldShowTrialModeSheet]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fde3         push       rbp                                         ; Objective C Implementation defined at 0x10018dc40 (instance)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdf1         mov        r15, rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdf4         call       sub_10007e91a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdf9         test       al, al&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdfb         jne        0x10007fe06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdfd         call       sub_10007e95e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe02         test       al, al&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe04         je         0x10007fe1a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe06         xor        ebx, ebx                                    ; XREF=-[IBATrialModeReminderPresenter shouldShowTrialModeSheet]+24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe08         movzx      eax, bl &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                                    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe19         ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;觉得汇编不好理解不直观的话,可以来点黑科技，看自动生成的高级语言代码：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; -[IBATrialModeReminderPresenter shouldShowTrialModeSheet](&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; * self, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; * _cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r15 = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((sub_10007e91a() != &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;) &amp;amp;&amp;amp; (sub_10007e95e() == &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            r14 = [[NSDate date] retain];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            r13 = [[[r15 &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;] lastPresentationDateTime] retain];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [r13 release];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rbx = &lt;span class=&quot;number&quot;&gt;0x1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (r13 != &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [r14 timeIntervalSinceReferenceDate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    var_30 = intrinsic_movsd(var_30, xmm0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    COND = xmm1 &amp;gt; &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rbx = COND ? &lt;span class=&quot;number&quot;&gt;0x1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [r13 release];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [r14 release];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rbx = &lt;span class=&quot;number&quot;&gt;0x0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rax = rbx &amp;amp; &lt;span class=&quot;number&quot;&gt;0xff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rax;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;仔细分析代码，发现两处关键代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;000000010007fdfb         jne        0x10007fe06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000010007fe04         je         0x10007fe1a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所以只需要把000000010007fdfb地址处的代码改为&lt;code&gt;jmp 0x10007fe1a&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;以上的操作都是在内存中修改的，关闭后重新打开还是无法使用，执行File -&amp;gt; Produce New Executable file, 这是会提示你签名无效，是否移除签名，选择否，(如果选择是的话，每次启动都会有个提示很烦人的),替换原来的可执行文件，重新启动Reveal,会提示&lt;code&gt;This copy of Reveal is damaged&lt;/code&gt;，解决方法同上，不在这里赘述。&lt;/p&gt;
&lt;h2 id=&quot;安全防范&quot;&gt;&lt;a href=&quot;#安全防范&quot; class=&quot;headerlink&quot; title=&quot;安全防范&quot;&gt;&lt;/a&gt;安全防范&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Web请求加入&lt;code&gt;Authorization header&lt;/code&gt;&lt;br&gt;  REST服务的web请求中加入Authorization header验证，对资源进行校验。可有效阻止爬虫。&lt;/li&gt;
&lt;li&gt;代码混淆（Android）&lt;/li&gt;
&lt;li&gt;花指令&lt;br&gt;  伪装其他编译器的特征码，干扰反汇编，绕过杀毒软件。&lt;/li&gt;
&lt;li&gt;加壳&lt;br&gt;  在二进制的程序中植入一段代码，在运行的时候优先取得程序的控制权，做一些额外的工作。常见的壳分为压缩壳和加密壳，加壳的软件直接破解难度很大需要先进行脱壳处理。&lt;/li&gt;
&lt;li&gt;加密, 代码签名&lt;br&gt;  一定程度上阻止逆向。&lt;/li&gt;
&lt;li&gt;调试检测&lt;br&gt;  用ring3级下的调试器对可执行程序进行调试时,调试器会把被调试的可执行程序作为一个子线程进行跟踪.这时被调试的可执行程序的PEB结构偏移0x02处的BeingDebugged的值为1,如果可执行程序未被调试,则值为0,所以可以利用这个值来检测程序是否被ring3级下的调试器调试。可以有效阻止动态调试。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;逆向工程一般说来就是在没有源代码的情况下，通过一定手段分析软件结构，挖掘出有用的信息或绕过软件自身的一些限制。目前对逆向的研究主要集中在Windows, Android，Mac和iOS这几个平台，各平台的发展也参差不齐。&lt;/p&gt;
    
    </summary>
    
      <category term="逆向工程" scheme="http://yoursite.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="逆向工程" scheme="http://yoursite.com/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>iOS微信浏览器直接打开App的解决方案</title>
    <link href="http://yoursite.com/2016/03/23/wexin-open-app/"/>
    <id>http://yoursite.com/2016/03/23/wexin-open-app/</id>
    <published>2016-03-22T16:00:00.000Z</published>
    <updated>2016-03-23T10:30:13.000Z</updated>
    
    <content type="html">&lt;p&gt;微信浏览器默认屏蔽了App的Scheme跳转，我们无法直接从微信中跳转至App中。但神奇的是市面上有两类App可以正常跳转。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;大众点评，小红书，BiliBili，京东等&lt;/li&gt;
&lt;li&gt;豆瓣等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一类，这些是腾讯入股的，应该有白名单一说，让腾讯给你100万，或许你就能获得这个能力。&lt;/p&gt;
&lt;p&gt;第二类，查看豆瓣页面在微信中跳转的地址：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://www.douban.com/doubanapp/dispatch?uri=/movie/5327268&amp;amp;from=mdouban&amp;amp;page=movie&amp;amp;model=B&amp;amp;copy=1&amp;amp;channel=card_movie&amp;amp;download=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而不是我们看到的自定义scheme，原因只有一个，它就是 &lt;code&gt;Universal Links&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置 Universal Links 可参看&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苹果文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;第二类解决方案有几个注意点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Universal Links 可以由系统来做选择，在短信或其他应用中，常按选择打开方式，若选择Safari打开，则后续的跳转会默认跳Safari&lt;/li&gt;
&lt;li&gt;Universal Links只在iOS 9及以上系统支持&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;App Search API Validation Tool， &lt;a href=&quot;https://search.developer.apple.com/appsearch-validation-tool/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://search.developer.apple.com/appsearch-validation-tool/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;配置Universal Links，可参看&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苹果文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deferred Deep Linking in iOS，&lt;a href=&quot;http://tech.glowing.com/cn/deferred-deep-linking-and-branch-sdk-in-ios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tech.glowing.com/cn/deferred-deep-linking-and-branch-sdk-in-ios/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;微信浏览器默认屏蔽了App的Scheme跳转，我们无法直接从微信中跳转至App中。但神奇的是市面上有两类App可以正常跳转。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="疑难杂症" scheme="http://yoursite.com/tags/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
  </entry>
  
  <entry>
    <title>现有iOS端图片缓存解决方案</title>
    <link href="http://yoursite.com/2016/03/22/image-cache-solution/"/>
    <id>http://yoursite.com/2016/03/22/image-cache-solution/</id>
    <published>2016-03-21T16:00:00.000Z</published>
    <updated>2016-03-22T12:29:54.000Z</updated>
    
    <content type="html">&lt;p&gt;移动App中使用网络图片的情况很常见，如果缓存问题处理不好会很大程度上影响App的性能。本文简单介绍一下图片缓存流程及&lt;code&gt;GitHub&lt;/code&gt;上现有解决方案。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;一般图片缓存及使用流程&quot;&gt;&lt;a href=&quot;#一般图片缓存及使用流程&quot; class=&quot;headerlink&quot; title=&quot;一般图片缓存及使用流程&quot;&gt;&lt;/a&gt;一般图片缓存及使用流程&lt;/h2&gt;&lt;p&gt;最简单的缓存方式：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; imgData = &lt;span class=&quot;type&quot;&gt;NSData&lt;/span&gt;(contentsOfURL: &lt;span class=&quot;type&quot;&gt;NSURL&lt;/span&gt;(string: &lt;span class=&quot;string&quot;&gt;&quot;http://7narze.com1.z0.glb.clouddn.com/1.jpg&quot;&lt;/span&gt;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgData?.writeToFile(&lt;span class=&quot;string&quot;&gt;&quot;cache patch&quot;&lt;/span&gt;, atomically: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; img = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(data: imgData!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgView.image = img&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很明显，下载图片和缓存图片时有主线程阻塞。那么优化成下面的样子：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(dispatch_get_global_queue(&lt;span class=&quot;type&quot;&gt;QOS_CLASS_DEFAULT&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) &amp;#123; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; imgData = &lt;span class=&quot;type&quot;&gt;NSData&lt;/span&gt;(contentsOfURL: &lt;span class=&quot;type&quot;&gt;NSURL&lt;/span&gt;(string: &lt;span class=&quot;string&quot;&gt;&quot;http://7narze.com1.z0.glb.clouddn.com/1.jpg&quot;&lt;/span&gt;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgData?.writeToFile(&lt;span class=&quot;string&quot;&gt;&quot;cache patch&quot;&lt;/span&gt;, atomically: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_async(dispatch_get_main_queue(), &amp;#123; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; img = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(data: imgData!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        imgView.image = img&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样是在子线程下载并缓存，性能上会好很多，但很明显这样不够用。&lt;/p&gt;
&lt;h3 id=&quot;一般缓存流程&quot;&gt;&lt;a href=&quot;#一般缓存流程&quot; class=&quot;headerlink&quot; title=&quot;一般缓存流程&quot;&gt;&lt;/a&gt;一般缓存流程&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;flow.png&quot; alt=&quot;一般流程&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图，可以看出还有很多可优化点&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;异步下载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;子线程解压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;使用缓存 (内存/磁盘)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;缓存解压缩后的图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;减少内存级别的拷贝&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;良好的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;图片预下载&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;现有解决方案&quot;&gt;&lt;a href=&quot;#现有解决方案&quot; class=&quot;headerlink&quot; title=&quot;现有解决方案&quot;&gt;&lt;/a&gt;现有解决方案&lt;/h2&gt;&lt;p&gt;好，下面我们简单介绍下目前&lt;code&gt;GitHub&lt;/code&gt;上比较流行（star数据大于2000）的图片缓存库。&lt;/p&gt;
&lt;h3 id=&quot;SDWebImage&quot;&gt;&lt;a href=&quot;#SDWebImage&quot; class=&quot;headerlink&quot; title=&quot;SDWebImage&quot;&gt;&lt;/a&gt;SDWebImage&lt;/h3&gt;&lt;p&gt;基础流程&lt;br&gt;&lt;img src=&quot;SDWebImage.png&quot; alt=&quot;SDWebImage流程&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点&lt;ul&gt;
&lt;li&gt;健全的Category&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImagePrefetcher&lt;/code&gt;预加载&lt;/li&gt;
&lt;li&gt;独立的下载模块/缓存模块&lt;/li&gt;
&lt;li&gt;自定义&lt;code&gt;age&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点&lt;ul&gt;
&lt;li&gt;因缓存的图片数据已解码，故占用空间变大(这个也算不上缺点)&lt;/li&gt;
&lt;li&gt;没有处理减少内存级别的拷贝和&lt;code&gt;字节对齐&lt;/code&gt;(&lt;code&gt;FastImageCache&lt;/code&gt;对此有处理)&lt;/li&gt;
&lt;li&gt;图片属于静态资源，没有判断&lt;code&gt;Cache-Control&lt;/code&gt;、&lt;code&gt;Last-Modified&lt;/code&gt;或&lt;code&gt;ETag&lt;/code&gt;(通用库做到这点有些麻烦)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Kingfisher&quot;&gt;&lt;a href=&quot;#Kingfisher&quot; class=&quot;headerlink&quot; title=&quot;Kingfisher&quot;&gt;&lt;/a&gt;Kingfisher&lt;/h3&gt;&lt;p&gt;&lt;code&gt;SDWebImage&lt;/code&gt;的&lt;code&gt;Swift&lt;/code&gt;版&lt;/p&gt;
&lt;p&gt;流程基本和&lt;code&gt;SDWebImage&lt;/code&gt;一致&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Swift&lt;/code&gt;编写&lt;/li&gt;
&lt;li&gt;使用很多最新API&lt;/li&gt;
&lt;li&gt;其他同&lt;code&gt;SDWebImage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点&lt;ul&gt;
&lt;li&gt;iOS 8 later&lt;/li&gt;
&lt;li&gt;其他同&lt;code&gt;SDWebImage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;AFNetworking&quot;&gt;&lt;a href=&quot;#AFNetworking&quot; class=&quot;headerlink&quot; title=&quot;AFNetworking&quot;&gt;&lt;/a&gt;AFNetworking&lt;/h3&gt;&lt;p&gt;基础流程图&lt;br&gt;&lt;img src=&quot;AFNetworking.png&quot; alt=&quot;AFNetworking流程&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点&lt;ul&gt;
&lt;li&gt;健全的Category&lt;/li&gt;
&lt;li&gt;缓存机制可定制(实现&lt;code&gt;AFImageCache&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;依附&lt;code&gt;AFNetworking&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点&lt;ul&gt;
&lt;li&gt;功能单一&lt;/li&gt;
&lt;li&gt;缓存仅在内存中(默认实现)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FastImageCache&quot;&gt;&lt;a href=&quot;#FastImageCache&quot; class=&quot;headerlink&quot; title=&quot;FastImageCache&quot;&gt;&lt;/a&gt;FastImageCache&lt;/h3&gt;&lt;p&gt;无网络缓存功能，但却是&lt;a href=&quot;http://blog.cnbang.net/tech/2578/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图片加载速度极限优化&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;实际应用中推荐&lt;code&gt;SDWebImage&lt;/code&gt;/&lt;code&gt;Kingfisher&lt;/code&gt;结合&lt;code&gt;FastImageCache&lt;/code&gt;使用。若要考虑HTTP的缓存机制，可以自己继承/实现封装。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;移动App中使用网络图片的情况很常见，如果缓存问题处理不好会很大程度上影响App的性能。本文简单介绍一下图片缓存流程及&lt;code&gt;GitHub&lt;/code&gt;上现有解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Android技术周刊第8期</title>
    <link href="http://yoursite.com/2016/03/22/android-technology-magazine-8/"/>
    <id>http://yoursite.com/2016/03/22/android-technology-magazine-8/</id>
    <published>2016-03-21T16:00:00.000Z</published>
    <updated>2016-04-04T13:24:11.000Z</updated>
    
    <content type="html">&lt;p&gt;程序员，一种生物，能把咖啡和汉堡转化成软件的生物！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;BestArticle&quot;&gt;&lt;a href=&quot;#BestArticle&quot; class=&quot;headerlink&quot; title=&quot;BestArticle&quot;&gt;&lt;/a&gt;BestArticle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://artemzin.com/blog/why-i-dont-want-to-use-kotlin-for-android-development-yet/?utm_source=Android+Weekly&amp;amp;utm_campaign=1172c35594-Android_Weekly_196&amp;amp;utm_medium=email&amp;amp;utm_term=0_4eb677ad19-1172c35594-337979953&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why I don’t want to use Kotlin for Android Development yet&lt;/a&gt; Even though Kotlin is better than Java in many points it still has significant (in my opinion) drawbacks. &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NDM2MjAwNw==&amp;amp;mid=401750457&amp;amp;idx=1&amp;amp;sn=e59785deb47c1e2fc6845bbfad6346b5&amp;amp;scene=1&amp;amp;srcid=0314MCxuZ1lTMKgZRVmVT6aM&amp;amp;key=710a5d99946419d9453ad7f332e226220c10ab61cd89b34235281c135cd38750ed2857d5d3ec1c541e88a29067fec03e&amp;amp;ascene=0&amp;amp;uin=MjM2NDM0ODgyMA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JVM内幕：Java虚拟机详解&lt;/a&gt; 这篇文章解释了Java 虚拟机（JVM）的内部架构。下图显示了遵守 Java SE 7 规范的典型的 JVM 核心内部组件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=410252715&amp;amp;idx=1&amp;amp;sn=d1d5f95de8d1905c4530955f862f735b&amp;amp;scene=1&amp;amp;srcid=0314f27h2PiA2rFrHFqcN6vd&amp;amp;key=710a5d99946419d937366e44ff1d99ad36bfb96517cd294c0ad0aae0710179714b2db5e3ca0bea3e063e981a6409ee21&amp;amp;ascene=0&amp;amp;uin=MjM2NDM0ODgyMA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何成为架构师？7个关键的思考、习惯和经验&lt;/a&gt; 工作了挺久，发现有个挺有意思的现象，从程序员、高级程序员，到现在挂着架构师、专家之类的头衔，伴随着技术和能力的提高，想不明白的事情反而越来越多了。这些疑问有些来自于跟小伙伴交流，有些是我的自问自答，有些到现在也想不清楚，这篇文章就来写一写这些问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DevTools&quot;&gt;&lt;a href=&quot;#DevTools&quot; class=&quot;headerlink&quot; title=&quot;DevTools&quot;&gt;&lt;/a&gt;DevTools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://thx.github.io/RAP/index_zh.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RAP&lt;/a&gt; RAP(Rigel Automation Platform)，随时随地编辑、查看、使用、校验接口数据，它的口号是：提高效率，回家吃晚饭！！&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rap.fe.yeshj.com/platform/home.do&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;沪江API系统&lt;/a&gt; 沪江API系统一个可视化接口管理工具 基于阿里妈妈RAP系统开发，通过分析接口结构，动态生成模拟数据，校验真实接口正确性， 围绕接口定义，通过一系列自动化工具提升我们的协作效率。我们的口号：提高效率，回家吃晚饭！(哈哈，看样子想回家吃晚饭是所有程序员的心声)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FantasticLibs&quot;&gt;&lt;a href=&quot;#FantasticLibs&quot; class=&quot;headerlink&quot; title=&quot;FantasticLibs&quot;&gt;&lt;/a&gt;FantasticLibs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JakeWharton/hugo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hugo&lt;/a&gt; Annotation-triggered method call logging for your debug builds.&lt;br&gt;does not support kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Marswin/MarsDaemon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarsDaemon&lt;/a&gt; 这是一个轻量级的库，配置几行代码，就可以实现在android上实现进程常驻，也就是在系统强杀下，以及360获取root权限下，clean master获取root权限下都无法杀死进程；支持系统2.3到6.0、支持大部分设备，包括三星，华为，oppo，nexus，魅族等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HotNews&quot;&gt;&lt;a href=&quot;#HotNews&quot; class=&quot;headerlink&quot; title=&quot;HotNews&quot;&gt;&lt;/a&gt;HotNews&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ithome.com/html/digi/211327.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;路由器刷第三方固件遭美官方封杀&lt;/a&gt; 如今，路由器也开始智能化，除了厂商在固件上加入很多个性化定制的选择，不少也支持刷入第三方的固件，比如DD-WRT、Tomato、OpenWRT等，从而实现方便多拨、信号放大、白名单、离线下载等功能&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnbeta.com/articles/483953.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google向山景城递交了最新的总部园区设计方案&lt;/a&gt; Google于去年透露会向苹果那样，在当前位于加州山景城附近的地方建造一个充满艺术感的新园区。根据该公司最新展示的效果图，可看出新园区像极了一个未来的节日营地。该公司已经向该市递交了最新的方案和效果图，当然我们也留意到了某些变动。最初，Google意在搭建轻量、可移动的建筑，但最新方案看起来会是更扎实的那种&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/e/1160000004510150&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SegmentFault D-Day 上海：云服务专场&lt;/a&gt; SegmentFault D-Day，全称 SegmentFault Developer Day，是由 SegmentFault 发起主办的系列技术沙⻰。自 2014 年启动，D-Day 技术沙龙已在北、上、广、深、杭等 10 个城市巡回举办了 19 场，涉及前端、云计算、后端、大数据、移动开发等众多主题，活动覆盖数千位开发者。2016 年，SegmentFault 将继续立足社区，传播前沿的技术实践内容：今年 5 个月，D-Day 将跨越 10 个城市，邀请重量级嘉宾，贴合业务需求，精选分享议题，为开发者打造更具价值的线下技术交流。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aidanfollestad.com/about&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这货95年的&lt;/a&gt; 这个小伙子年少有为，你值得一看&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5OTM0MzIwMQ==&amp;amp;mid=404321327&amp;amp;idx=1&amp;amp;sn=2d851ab953b7bce7d8734b0fdd94ef57&amp;amp;scene=1&amp;amp;srcid=0314Ml3EVRrxM97kqOLugyZJ&amp;amp;key=710a5d99946419d93f5d9d6f2c3d98d18d055bcc73fb7928a3c0917d2f4a45276269576400899ff2151edcb1de3d41c4&amp;amp;ascene=0&amp;amp;uin=MjM2NDM0ODgyMA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员实力撩妹指南&lt;/a&gt; 猴喽~~猿猿们雷们猴啊！教你们如何毫无PS痕迹地实力撩妹！！ 笑笑就好，千万别当真！&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;amp;mid=402771384&amp;amp;idx=1&amp;amp;sn=d5386de694c0cdb0250d258743744e2f&amp;amp;scene=1&amp;amp;srcid=0316uWxad7Bm5NtL4Sfz7ZAo&amp;amp;key=710a5d99946419d98acec59e4705d4eec8255ea10f4d2d3cf92b60150b0f33e7d6a8a32b00dfbe1bd248a31ccd71a88d&amp;amp;ascene=0&amp;amp;uin=MjM2NDM0ODgyMA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上海Android交流会安排与分享嘉宾&lt;/a&gt; 嘿嘿，等了这么久，我们终于确定了大会的具体安排与邀请嘉宾，本次分享嘉宾由我跟「大头鬼」一起邀请，场地由薄荷提供，在这里感谢「大头鬼」以及这些嘉宾百忙之中对这次活动的支持与配合。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIzNzE4NjkxMw==&amp;amp;mid=403135639&amp;amp;idx=1&amp;amp;sn=0e5b8da2beb165d56b0d208773117eb2&amp;amp;scene=1&amp;amp;srcid=03172s3Vu9j3AMP7s9ygBt3I&amp;amp;key=710a5d99946419d989b5ca4fb7c598c00497dced00ff1a34bb7882ff4c9edaf6d26dc57ae6f4bdb2326275d44d9ae3be&amp;amp;ascene=0&amp;amp;uin=MjM2NDM0ODgyMA%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里巴巴终于忍不住了，宣布成立VR（虚拟现实）实验室&lt;/a&gt; 凤凰科技讯 3月17日消息，阿里巴巴宣布成立VR（虚拟现实）实验室，并首次对外透露集团VR战略。据介绍，阿里将发挥平台优势，同步推动VR内容培育和硬件孵化。在内容方面，阿里已经全面启动Buy＋计划引领未来购物体验，并将协同旗下的影业、音乐、视频网站等，推动优质VR内容产出。在硬件方面，阿里将依托全球最大电商平台，搭建VR商业生态，加速VR设备普及，助力硬件厂商发展&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;程序员，一种生物，能把咖啡和汉堡转化成软件的生物！&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android技术周刊" scheme="http://yoursite.com/tags/Android%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>iOS技术周刊第4期</title>
    <link href="http://yoursite.com/2016/03/20/ios-technology-magazine-4/"/>
    <id>http://yoursite.com/2016/03/20/ios-technology-magazine-4/</id>
    <published>2016-03-19T16:00:00.000Z</published>
    <updated>2016-03-20T11:20:29.000Z</updated>
    
    <content type="html">&lt;p&gt;本周Hybrid、设计模式，都有原创文章，另外还有篇WWDC攻略。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Hybrid&quot;&gt;&lt;a href=&quot;#Hybrid&quot; class=&quot;headerlink&quot; title=&quot;Hybrid&quot;&gt;&lt;/a&gt;Hybrid&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/17/wkwebview-study-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WKWebView（入门篇）&lt;/a&gt; WkWebView是IOS8中引入的新组件，苹果将UIWebViewDelegate 与 UIWebView 重构成了 14 个类和 3 个协议并引入了不少新的功能和接口。由于一直以来苹果对于WebView内核封锁的程度是令人发指的，WkWebView的引入无疑是另广大开发者兴奋的事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.makeex.com/2016/03/16/objc-context-design-pattern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ObjC 基于上下文的设计&lt;/a&gt; 本篇文章主要介绍了关于上下文（Context）的一些概念，并提出了在设计上下文时应该考虑到的问题，最后通过一个实例来演示如何用Objective-C实现一个上下文。相信通过阅读本篇文章，大家能够基本掌握软件设计中上下文的使用，并且，我相信，想象力如此丰富的你们，会将此推演到更高的境界。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;页面布局&quot;&gt;&lt;a href=&quot;#页面布局&quot; class=&quot;headerlink&quot; title=&quot;页面布局&quot;&gt;&lt;/a&gt;页面布局&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gsdios/SDAutoLayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SDAutoLayout&lt;/a&gt; 一行代码搞定自动布局！支持Cell和Tableview高度自适应，Label和ScrollView内容自适应，致力于做最简单易用的AutoLayout库。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/s4cha/Stevia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stevia&lt;/a&gt; 一个把Auto Layout封装得很不错的库，写法很小清新。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;性能优化&quot;&gt;&lt;a href=&quot;#性能优化&quot; class=&quot;headerlink&quot; title=&quot;性能优化&quot;&gt;&lt;/a&gt;性能优化&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react-native/blob/9069bdf1c2e4ffd78b634d015b32dfec2cd3a371/React/Profiler/RCTFPSGraph.m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native监测界面流畅度&lt;/a&gt; React Native中监测界面流畅度（FPS）的代码要比GT的中好很多。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;音视频&quot;&gt;&lt;a href=&quot;#音视频&quot; class=&quot;headerlink&quot; title=&quot;音视频&quot;&gt;&lt;/a&gt;音视频&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zhangdan.qiniudn.com/qiniu2.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅析视频内容加密技术&lt;/a&gt; 七牛的一个PPT，介绍了视频内容加密技术。 &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pili-engineering/PLPlayerKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PLPlayerKit&lt;/a&gt; PLPlayerKit 是一个适用于 iOS 的音视频播放器 SDK，可高度定制化和二次开发，特色是支持 RTMP 和 HLS 直播流媒体播放。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://checkmate.gissen.nl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Checkmate MP3 Checker&lt;/a&gt; 可以方便的查看MP3文件的信息，并且检查错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;后花园&quot;&gt;&lt;a href=&quot;#后花园&quot; class=&quot;headerlink&quot; title=&quot;后花园&quot;&gt;&lt;/a&gt;后花园&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mwlio.github.io/2016/03/19/wwdc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WWDC攻略&lt;/a&gt; 今年的WWDC抢票快要来了，大家准备好了吗？不用担心，攻略在手，出行无忧。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本周Hybrid、设计模式，都有原创文章，另外还有篇WWDC攻略。&lt;br&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS技术周刊" scheme="http://yoursite.com/tags/iOS%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>WKWebView(入门篇)</title>
    <link href="http://yoursite.com/2016/03/17/wkwebview-study-1/"/>
    <id>http://yoursite.com/2016/03/17/wkwebview-study-1/</id>
    <published>2016-03-16T16:00:00.000Z</published>
    <updated>2016-03-17T10:51:59.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;WKWebView&lt;/code&gt; 是 iOS8 中引入的新组件，苹果将 UIWebViewDelegate 与 UIWebView 重构成了 14 个类和 3 个协议并引入了不少新的功能和接口。由于一直以来苹果对于WebView内核封锁的程度是令人发指的，WKWebView 的引入无疑是另广大开发者兴奋的事。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;与传统UIWebView的优劣对比&quot;&gt;&lt;a href=&quot;#与传统UIWebView的优劣对比&quot; class=&quot;headerlink&quot; title=&quot;与传统UIWebView的优劣对比&quot;&gt;&lt;/a&gt;与传统UIWebView的优劣对比&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大幅降低网页加载时所占用的内存&lt;/li&gt;
&lt;li&gt;大幅增加网页加载速度&lt;/li&gt;
&lt;li&gt;支持高达 60 fps 的滚动刷新率，内置了手势探测&lt;/li&gt;
&lt;li&gt;提供更多Web新功能和接口&lt;/li&gt;
&lt;li&gt;支持了更多的HTML5特性&lt;/li&gt;
&lt;li&gt;更优雅的与JS的交互方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缺点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WkWebView不再支持页面缓存&lt;/li&gt;
&lt;li&gt;WkWebView不可以实现NSURLProtocol拦截&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看到它相比于UIWebView有着那么多的优点，是不是已经心动了呢？那么接下来与笔者一起走入WkWebView的奇妙世界吧~&lt;/p&gt;
&lt;h2 id=&quot;新增的属性&quot;&gt;&lt;a href=&quot;#新增的属性&quot; class=&quot;headerlink&quot; title=&quot;新增的属性&quot;&gt;&lt;/a&gt;新增的属性&lt;/h2&gt;&lt;h3 id=&quot;1-estimatedProgress&quot;&gt;&lt;a href=&quot;#1-estimatedProgress&quot; class=&quot;headerlink&quot; title=&quot;1.estimatedProgress&quot;&gt;&lt;/a&gt;1.estimatedProgress&lt;/h3&gt;&lt;p&gt;以往WebView的加载进度条的具体进度值都是假的数据，而&lt;code&gt;estimatedProgress&lt;/code&gt;则可以用来显示真实的进度值变化。&lt;code&gt;estimatedProgress&lt;/code&gt;是通过KVO的监控来进行使用的。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[webView addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;estimatedProgress&quot;&lt;/span&gt; options:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; context:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)keyPath ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)change context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([keyPath isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;estimatedProgress&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (object == webView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; progress = webView.estimatedProgress;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/** 用当前获取的进度值去处理进度条控件 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ... ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; observeValueForKeyPath:keyPath ofObject:object change:change context:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-title&quot;&gt;&lt;a href=&quot;#2-title&quot; class=&quot;headerlink&quot; title=&quot;2.title&quot;&gt;&lt;/a&gt;2.title&lt;/h3&gt;&lt;p&gt;与&lt;code&gt;estimatedProgress&lt;/code&gt;的使用方式类似，可以获取到html页面&lt;code&gt;title&lt;/code&gt;标签下设置的值。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[webView addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;title&quot;&lt;/span&gt; options:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; context:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)keyPath ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)change context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([keyPath isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;title&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (object == webView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title = webView.title;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// ... ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; observeValueForKeyPath:keyPath ofObject:object change:change context:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-WKWebViewConfiguration&quot;&gt;&lt;a href=&quot;#3-WKWebViewConfiguration&quot; class=&quot;headerlink&quot; title=&quot;3.WKWebViewConfiguration&quot;&gt;&lt;/a&gt;3.WKWebViewConfiguration&lt;/h3&gt;&lt;p&gt;&lt;code&gt;WKWebViewConfiguration&lt;/code&gt;可以设置偏好设置，与网页交互的配置，注入对象，注入js等。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WKWebViewConfiguration *config =[[WKWebViewConfiguration alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** WebView的偏好设置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.preferences.minimumFontSize = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.preferences.javaScriptEnabled = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 默认是不能通过JS自动打开窗口的，必须通过用户交互才能打开 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.preferences.javaScriptCanOpenWindowsAutomatically = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**  添加JS到到HTML中  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *js = &lt;span class=&quot;string&quot;&gt;@&quot;window.alert(&#39;欢迎体验WkWebView!!&#39;);&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WKUserScript *script = [[WKUserScript alloc]initWithSource:js injectionTime:WKUserScriptInjectionTimeAtDocumentEnd forMainFrameOnly:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WKWebViewConfiguration *config =[[WKWebViewConfiguration alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[config.userContentController addUserScript:script];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 用WkWebView的 - (instancetype)initWithFrame:(CGRect)frame configuration:(WKWebViewConfiguration *)configuration 方法初始化webView */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView = [[WKWebView alloc]initWithFrame:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.bounds configuration:config];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;新的代理方法&quot;&gt;&lt;a href=&quot;#新的代理方法&quot; class=&quot;headerlink&quot; title=&quot;新的代理方法&quot;&gt;&lt;/a&gt;新的代理方法&lt;/h2&gt;&lt;p&gt;WkWebView中提供了新的三种代理方法，分别是&lt;code&gt;WKNavigationDelegate&lt;/code&gt;、&lt;code&gt;WKUIDelegate&lt;/code&gt;、&lt;code&gt;WKScriptMessageHandler&lt;/code&gt;，下文将对其作用的场景进行一一介绍。&lt;/p&gt;
&lt;h3 id=&quot;1-WKNavigationDelegate&quot;&gt;&lt;a href=&quot;#1-WKNavigationDelegate&quot; class=&quot;headerlink&quot; title=&quot;1.WKNavigationDelegate&quot;&gt;&lt;/a&gt;1.WKNavigationDelegate&lt;/h3&gt;&lt;p&gt;该代理方法主要是用来追踪webview的加载过程，和传统的UIWebView比较相似，分别对页面开始加载、加载完成、加载失败等几个过程进行事件捕捉和追踪，另外在页面的跳转时也可对其进行拦截处理、如过滤某些特定网页等业务操作。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 页面开始加载时调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 当内容开始返回时调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView didCommitNavigation:(WKNavigation *)navigation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 页面加载完成之后调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 页面加载失败时调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView didFailProvisionalNavigation:(WKNavigation *)navigation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 接收到服务器跳转请求之后调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)navigation;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上4个代理委托是不是很眼熟？没错，其实就是对应UIWebView中的那几个代理方法。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 在收到响应后，决定是否跳转 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView decidePolicyForNavigationResponse:(WKNavigationResponse *)navigationResponse decisionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(WKNavigationResponsePolicy))decisionHandler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果响应的地址是百度，则允许跳转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([navigationResponse.response.URL.host.lowercaseString isEqual:&lt;span class=&quot;string&quot;&gt;@&quot;www.baidu.com&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        decisionHandler(WKNavigationResponsePolicyAllow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//否则不允许跳转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    decisionHandler(WKNavigationResponsePolicyCancel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 在发送请求之前，决定是否跳转 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView decidePolicyForNavigationAction:(WKNavigationAction *)navigationAction decisionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(WKNavigationActionPolicy))decisionHandler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果响应的地址是百度，则允许跳转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([navigationResponse.response.URL.host.lowercaseString isEqual:&lt;span class=&quot;string&quot;&gt;@&quot;www.baidu.com&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        decisionHandler(WKNavigationResponsePolicyAllow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//否则不允许跳转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    decisionHandler(WKNavigationResponsePolicyCancel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-WKUIDelegate&quot;&gt;&lt;a href=&quot;#2-WKUIDelegate&quot; class=&quot;headerlink&quot; title=&quot;2.WKUIDelegate&quot;&gt;&lt;/a&gt;2.WKUIDelegate&lt;/h3&gt;&lt;p&gt;这个代理中包含3个针对于web界面的三种提示框（警告框、确认框、输入框）的弹出事件捕捉&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**  确认框 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView runJavaScriptAlertPanelWithMessage:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)message initiatedByFrame:(WKFrameInfo *)frame completionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;))completionHandler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; alloc] initWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;标题&quot;&lt;/span&gt; message:message delegate:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; cancelButtonTitle:&lt;span class=&quot;string&quot;&gt;@&quot;确认&quot;&lt;/span&gt; otherButtonTitles: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;] show];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    completionHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**  警告框 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView runJavaScriptTextInputPanelWithPrompt:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)prompt defaultText:(nullable &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)defaultText initiatedByFrame:(WKFrameInfo *)frame completionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * __nullable result))completionHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**  输入框 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webView:(WKWebView *)webView runJavaScriptTextInputPanelWithPrompt:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)prompt defaultText:(nullable &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)defaultText initiatedByFrame:(WKFrameInfo *)frame completionHandler:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^)(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * __nullable result))completionHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** webview关闭事件 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webViewDidClose:(WKWebView *)webView;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-WKScriptMessageHandler&quot;&gt;&lt;a href=&quot;#3-WKScriptMessageHandler&quot; class=&quot;headerlink&quot; title=&quot;3.WKScriptMessageHandler&quot;&gt;&lt;/a&gt;3.WKScriptMessageHandler&lt;/h3&gt;&lt;p&gt;这个协议只有一个方法，它是APP与Web进行交互的关键，在从web中接收到一个脚本时调用，在下文中会详细进行说明。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;更优雅的与Web交互&quot;&gt;&lt;a href=&quot;#更优雅的与Web交互&quot; class=&quot;headerlink&quot; title=&quot;更优雅的与Web交互&quot;&gt;&lt;/a&gt;更优雅的与Web交互&lt;/h2&gt;&lt;p&gt;在讲WKWebView之前，让我们先来看一下UIWebView是如何与Web进行交互的。&lt;/p&gt;
&lt;h3 id=&quot;UIWebView-–-APP-调-Web&quot;&gt;&lt;a href=&quot;#UIWebView-–-APP-调-Web&quot; class=&quot;headerlink&quot; title=&quot;UIWebView – APP 调 Web&quot;&gt;&lt;/a&gt;UIWebView – APP 调 Web&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * result = [webView stringByEvaluatingJavaScriptFromString:&lt;span class=&quot;string&quot;&gt;@&quot;func()&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;iOS9默认是不允许加载http请求的，对于webview加载http网页也是不允许的。可以通过修改info.plist取消http限制。&lt;/p&gt;
&lt;h3 id=&quot;UIWebView-–-Web-调-APP&quot;&gt;&lt;a href=&quot;#UIWebView-–-Web-调-APP&quot; class=&quot;headerlink&quot; title=&quot;UIWebView – Web 调 APP&quot;&gt;&lt;/a&gt;UIWebView – Web 调 APP&lt;/h3&gt;&lt;p&gt;第一步， 在APP本地先写一个方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)callNativeFun:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)args &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二步，在UIWebView的delegate方法中注入一段JS源码&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)webViewDidFinishLoad:(&lt;span class=&quot;built_in&quot;&gt;UIWebView&lt;/span&gt; *)webView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *js = &lt;span class=&quot;string&quot;&gt;@&quot;(function() &amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window.JSBridge = &amp;#123;&amp;#125;;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window.JSBridge.callFunction = function(functionName, args) &amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var url = \&quot;hybrid://invoke?\&quot;;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var callInfo = &amp;#123;&amp;#125;;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            callInfo.functionname = functionName;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (args) &amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                callInfo.args = args;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url += JSON.stringify(callInfo);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var rootElm = document.documentElement;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var iFrame = document.createElement(\&quot;IFRAME\&quot;);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            iFrame.setAttribute(\&quot;src\&quot;,url);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rootElm.appendChild(iFrame);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            iFrame.parentNode.removeChild(iFrame);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return true;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)();&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [webView stringByEvaluatingJavaScriptFromString:js];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第三步，在HTML某个事件中调用如下方法&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;window.JSBridge.callFunction(&lt;span class=&quot;string&quot;&gt;&quot;callNative&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;so many args&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当html调用这段注入的JS方法后，会将&lt;code&gt;hybrid://invoke?&lt;/code&gt; 以及后面拼接的内容以IFrame的方式进行加载，在加载的同时会出发APP的delegate方法&lt;/p&gt;
&lt;p&gt;最后一步，在APP的delegate中实现对本地方法的调用，从而完成Web到App的调用&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)webView:(&lt;span class=&quot;built_in&quot;&gt;UIWebView&lt;/span&gt; *)webView shouldStartLoadWithRequest:(&lt;span class=&quot;built_in&quot;&gt;NSURLRequest&lt;/span&gt; *)request navigationType:(&lt;span class=&quot;built_in&quot;&gt;UIWebViewNavigationType&lt;/span&gt;)navigationType &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *urlStr = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithString:url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([[urlStr lowercaseString] hasPrefix:&lt;span class=&quot;string&quot;&gt;@&quot;hybrid://invoke?&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         urlStr = [urlStr substringFromIndex:protocolPrefix.length];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         urlStr = [urlStr stringByReplacingPercentEscapesUsingEncoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *jsonError;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *callInfo = [&lt;span class=&quot;built_in&quot;&gt;NSJSONSerialization&lt;/span&gt; JSONObjectWithData:[urlStr dataUsingEncoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;] options:kNilOptions error:&amp;amp;jsonError];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *functionName = [callInfo objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;functionname&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * args = [callInfo objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;args&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([functionName isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;callNative&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;/**  在此处完成对预先定义好的native方法进行调用 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; callNativeFun:args];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上代码所述，UIWebView是通过Html的iframe来制造页面刷新再解析自定义协议，这种做法其实是比较lower的，也是对于苹果对UIWebView内核封闭的无奈。而WKWebView则是可以直接使用已经事先注入的js代码，runtime的将js接口给 Native 层传值。&lt;/p&gt;
&lt;h3 id=&quot;WKWebView-–-APP-调-Web&quot;&gt;&lt;a href=&quot;#WKWebView-–-APP-调-Web&quot; class=&quot;headerlink&quot; title=&quot;WKWebView – APP 调 Web&quot;&gt;&lt;/a&gt;WKWebView – APP 调 Web&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *js = &lt;span class=&quot;string&quot;&gt;@&quot;window.alert(&#39;欢迎体验WkWebView!!&#39;);&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[webView evaluateJavaScript:js completionHandler:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;WKWebView-–-Web-调-APP&quot;&gt;&lt;a href=&quot;#WKWebView-–-Web-调-APP&quot; class=&quot;headerlink&quot; title=&quot;WKWebView – Web 调 APP&quot;&gt;&lt;/a&gt;WKWebView – Web 调 APP&lt;/h3&gt;&lt;p&gt;第一步，在webview初始化之前先注册一个名为hybridDemo的handler对象。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WKWebViewConfiguration *config =[[WKWebViewConfiguration alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[config.userContentController addScriptMessageHandler:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; name:&lt;span class=&quot;string&quot;&gt;@&quot;hybridDemo&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView = [[WKWebView alloc]initWithFrame:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.bounds configuration:config];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二步，在HTML端调用JS来访问之前注册的handler对象，并通过调用postMessage方法把数据传到app。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; message = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;args&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;let go&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.webkit.messageHandlers.webViewApp.postMessage(message);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第三步，在webview容器中实现上文提过的WKScriptMessageHandler委托，从而响应来自于JS端下发的message。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dic = message.body;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *method = [dic objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;method&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *param = [dic objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;args&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**  doSomeThing..... */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;WKWebView&lt;/code&gt; 是 iOS8 中引入的新组件，苹果将 UIWebViewDelegate 与 UIWebView 重构成了 14 个类和 3 个协议并引入了不少新的功能和接口。由于一直以来苹果对于WebView内核封锁的程度是令人发指的，WKWebView 的引入无疑是另广大开发者兴奋的事。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hybrid" scheme="http://yoursite.com/tags/Hybrid/"/>
    
  </entry>
  
  <entry>
    <title>Android技术周刊第7期</title>
    <link href="http://yoursite.com/2016/03/14/android-technology-magazine-7/"/>
    <id>http://yoursite.com/2016/03/14/android-technology-magazine-7/</id>
    <published>2016-03-13T16:00:00.000Z</published>
    <updated>2016-04-04T13:24:02.000Z</updated>
    
    <content type="html">&lt;p&gt;Android say：我曾经的好兄弟Eclipse这次好像换了一辆车（che）！！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;KnowledgePool&quot;&gt;&lt;a href=&quot;#KnowledgePool&quot; class=&quot;headerlink&quot; title=&quot;KnowledgePool&quot;&gt;&lt;/a&gt;KnowledgePool&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dannylee1991.github.io/2016/03/13/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BA%94%E5%AD%90%E6%A3%8B%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;人工智能五子棋实现原理&lt;/a&gt; 主要是展示一个五子棋AI，后附项目地址，基于python实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;BestArticle&quot;&gt;&lt;a href=&quot;#BestArticle&quot; class=&quot;headerlink&quot; title=&quot;BestArticle&quot;&gt;&lt;/a&gt;BestArticle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzAxNjI3MDkzOQ==&amp;amp;mid=405513160&amp;amp;idx=1&amp;amp;sn=0f040112b7e169c85e616d2a3d685083&amp;amp;scene=1&amp;amp;srcid=0310X820pCWvYknd9f7hDhyV&amp;amp;key=710a5d99946419d98e423d517a8f6dd66afbbcc7d51a7b62eeace31371a6e2d008d69785f0f850e78348bb17dbc91a8f&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;适配 Android N 需要注意什么&lt;/a&gt; Android N 这次的新特性包括多窗口的支持、通知栏支持直接回复消息、对部分广播的后台限制、网络数据节省开关等，并不多，也有很多翻译文章已经介绍。这里主要分享对 Android N 的适配大家可能要注意什么。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/2141fb0dc62c?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;饿了么移动APP的架构演进&lt;/a&gt; 笔者说：时代演进，技术也随之发展。到今天，APP已然成为绝大多数互联网企业用来获取用户的核心渠道。与此同时，伴随着业务量的增长，愈来愈大、愈来愈多的APP也在不断地、持续地挑战着每一个移动端研发人员的知识深度，而我们的移动端技术人员也在这个不断接受挑战的过程中，成就了今天的移动互联网时代。饿了么移动APP就是这样一个挑战，多用户量、多业务量，在接受着更多更挑剔用户的同时，默默地、不断地演进着移动端的架构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://android.jobbole.com/82507/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android JSBridge的原理与实现&lt;/a&gt; 在Hybrid开发中，JSBridge已经是一个被说烂了的词汇了，但你是否知道它有几种实现方式，不妨看看这篇文章，可能又能获得一些新的思路&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://techblog.netflix.com/2016/03/how-we-build-code-at-netflix.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How We Build Code at Netflix&lt;/a&gt; 笔者说：How does Netflix build code before it’s deployed to the cloud? While pieces of this story have been told in the past, we decided it was time we shared more details. In this post, we describe the tools and techniques used to go from source code to a deployed service serving movies and TV shows to more than 75 million global Netflix members.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DevTools&quot;&gt;&lt;a href=&quot;#DevTools&quot; class=&quot;headerlink&quot; title=&quot;DevTools&quot;&gt;&lt;/a&gt;DevTools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/che/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eclipse Che&lt;/a&gt; 有人说这个界面更好看，有人说依然cost a lot of system resource~&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDg3MjczMg==&amp;amp;mid=402911924&amp;amp;idx=1&amp;amp;sn=c45f81d32b5e55c0608ea17da65fed1c&amp;amp;scene=1&amp;amp;srcid=0310v9Zr7iwYwEOypG1OxFl8&amp;amp;from=groupmessage&amp;amp;isappinstalled=0#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android N 开发者预览版发布&lt;/a&gt; 我们今天很高兴地宣布 Android N 开发者预览版发布！今年的做法有些不同，我们更早地发布了预览版…确实很早。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FantasticLibs&quot;&gt;&lt;a href=&quot;#FantasticLibs&quot; class=&quot;headerlink&quot; title=&quot;FantasticLibs&quot;&gt;&lt;/a&gt;FantasticLibs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/yinchuandong/SelectableTextView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TranslateApp（咕咚翻译）&lt;/a&gt; 自由选择文字的textview, 继承textview，实现弹出菜单，可自定义弹出菜单，并且弹出菜单跟随光标&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Rochester-NRT/AlphaGo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AlphaGoReplication&lt;/a&gt; A replication of DeepMind’s 2016 Nature publication, “Mastering the game of Go with deep neural networks and tree search,” details of which can be found on their website.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HotNews&quot;&gt;&lt;a href=&quot;#HotNews&quot; class=&quot;headerlink&quot; title=&quot;HotNews&quot;&gt;&lt;/a&gt;HotNews&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&amp;amp;mid=402377147&amp;amp;idx=4&amp;amp;sn=850019b96bd8e78149f8f89683fc0df0&amp;amp;scene=1&amp;amp;srcid=0307aeV1AaPgVFiOjUfVK0Fv&amp;amp;key=710a5d99946419d9857346ad2987b1abea36c3b27ed078a72f4de49c2692f38f02baa7fcd22cece27aae9c012c5547e0&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;逾千万使用 https 的站点受到新型解密攻击的威胁&lt;/a&gt; 低成本的 DROWN 攻击能在数小时内完成数据解密，该攻击对采用了 TLS 的邮件服务器也同样奏效&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android say：我曾经的好兄弟Eclipse这次好像换了一辆车（che）！！&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android技术周刊" scheme="http://yoursite.com/tags/Android%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>iOS技术周刊第3期</title>
    <link href="http://yoursite.com/2016/03/13/ios-technology-magazine-3/"/>
    <id>http://yoursite.com/2016/03/13/ios-technology-magazine-3/</id>
    <published>2016-03-12T16:00:00.000Z</published>
    <updated>2016-03-13T14:29:38.000Z</updated>
    
    <content type="html">&lt;p&gt;本周重点推荐新开源的通用下载模块，另外&lt;code&gt;本地数据存储&lt;/code&gt;和&lt;code&gt;页面布局&lt;/code&gt;标签有新内容了~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;开源&quot;&gt;&lt;a href=&quot;#开源&quot; class=&quot;headerlink&quot; title=&quot;开源&quot;&gt;&lt;/a&gt;开源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HujiangTechnology/HJMURLDownload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;通用下载模块&lt;/a&gt;开源了，基于 NSURLSession 开发，支持多任务、后台下载、断点续传。介绍文章见&lt;a href=&quot;http://mobilev5.github.io/2016/03/13/meeting-common-urldownloader/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Swift&quot;&gt;&lt;a href=&quot;#Swift&quot; class=&quot;headerlink&quot; title=&quot;Swift&quot;&gt;&lt;/a&gt;Swift&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://firestudio.cn/2016/03/11/take-screenshot-of-eaglview-may-easily-cause-memory-leaks-in-swift/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift 下 OpenGL 截图容易导致的内存泄露&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hybrid&quot;&gt;&lt;a href=&quot;#Hybrid&quot; class=&quot;headerlink&quot; title=&quot;Hybrid&quot;&gt;&lt;/a&gt;Hybrid&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/turbolinks/turbolinks-ios&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Basecamp 新出的一个 hybrid 框架&lt;/a&gt; Basecamp 一直都在尝试 hybird 这套开发方式，技术方案选用了 WKWebView，需要 iOS 9 以上，初步看下来是一套很不错的整套方案，期待后续文章专门介绍。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;页面布局&quot;&gt;&lt;a href=&quot;#页面布局&quot; class=&quot;headerlink&quot; title=&quot;页面布局&quot;&gt;&lt;/a&gt;页面布局&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/654eaf0c63c1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIStackView介绍&lt;/a&gt;，iOS 9之后增加了新的布局神器UIStackView, 文中介绍了UIStackView的常用属性，并根据相应的demo阐述其在实际生产中的作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;本地数据存储&quot;&gt;&lt;a href=&quot;#本地数据存储&quot; class=&quot;headerlink&quot; title=&quot;本地数据存储&quot;&gt;&lt;/a&gt;本地数据存储&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuduo.me/2016/03/12/gointocoredata/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;走进 Core Data 的世界&lt;/a&gt; ，Core Data作为一个OS X和iOS中自带的数据存储框架，很早就存在了。因其存在一些缺点使得很多人放弃使用而采用其它方案。但苹果依然在每个iOS版本中不断对其改进，例如在iOS 8中加入了BetchUpdate，解决了之前一直令人诟病的批量更新问题，使得Core Data更为强大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;动画&quot;&gt;&lt;a href=&quot;#动画&quot; class=&quot;headerlink&quot; title=&quot;动画&quot;&gt;&lt;/a&gt;动画&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/scotteg/LayerPlayer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LayerPlayer&lt;/a&gt;，LayerPlayer - Layer Player explores the capabilities of Apple’s Core Animation API&lt;br&gt;一套可以快速熟悉 Core Animation API 的项目，可以调节各种参数，非常适合入门学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TencentOpen/GT&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GT&lt;/a&gt; 腾讯开源的一套性能检测工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/injectionforxcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Injection for Xcode&lt;/a&gt; 结合 &lt;a href=&quot;https://github.com/artsy/eigen/blob/master/Artsy%2FView_Controllers%2FApp_Navigation%2FARTopMenuViewController%2BDeveloperExtras.m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DeveloperExtras.m&lt;/a&gt;  用就很方便了，每次触发 Injection，然后重新 pop 和 push 当前页，可以不需要编译实现快速代码预览&lt;br&gt;视频可以看&lt;a href=&quot;http://artsy.github.io/blog/2016/03/05/iOS-Code-Injection/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;后花园&quot;&gt;&lt;a href=&quot;#后花园&quot; class=&quot;headerlink&quot; title=&quot;后花园&quot;&gt;&lt;/a&gt;后花园&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gitignore 很多时候我们都是参考 &lt;a href=&quot;https://www.gitignore.io/api/xcode%2Cobjective-c%2Cswift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gitignore.io&lt;/a&gt;, 但具体情况还是需要具体分析，下面两种情况需要增改 gitignore 文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git 库 为 Library 库时，完全可以过滤掉 *.xcworkspace 和 Podfile.lock 文件，参考 &lt;a href=&quot;https://github.com/orta/ORStackView/blob/master/.gitignore&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ORStackView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git 库 为项目库时，可以考虑忽略 xcshareddata *.xcscmblueprint 等&lt;br&gt;参考开源项目 &lt;a href=&quot;https://github.com/artsy/eigen/blob/master/.gitignore&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eigen&lt;/a&gt;&lt;br&gt;此外当你的 gitigonre 发生了变化，新增了一些忽略文件的时候，一定要记得使用 &lt;code&gt;git rm --cached&lt;/code&gt; 命令删除 git 库的索引，不然 gitignore 不会生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@import 和 使用 Objective-C++ 生成的 *.mm 的文件不兼容，遇到这种情况暂时只能回退到老的方式，期待后续支持。参考 &lt;a href=&quot;https://github.com/stripe/stripe-ios/issues/220&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/stripe/stripe-ios/issues/220&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本周重点推荐新开源的通用下载模块，另外&lt;code&gt;本地数据存储&lt;/code&gt;和&lt;code&gt;页面布局&lt;/code&gt;标签有新内容了~&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS技术周刊" scheme="http://yoursite.com/tags/iOS%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>iOS通用下载管理器-HJMURLDownloader</title>
    <link href="http://yoursite.com/2016/03/13/meeting-common-urldownloader/"/>
    <id>http://yoursite.com/2016/03/13/meeting-common-urldownloader/</id>
    <published>2016-03-12T16:00:00.000Z</published>
    <updated>2016-03-13T14:13:18.000Z</updated>
    
    <content type="html">&lt;p&gt;HJMURLDownloader 是我们内部使用的 iOS 下载模块，基于 NSURLSession开发，已经在两个项目中使用，还算是比较稳定，在大家的努力下终于已经在 Github 上开源了，见&lt;a href=&quot;https://github.com/HujiangTechnology/HJMURLDownloader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;为什么造轮子&quot;&gt;&lt;a href=&quot;#为什么造轮子&quot; class=&quot;headerlink&quot; title=&quot;为什么造轮子&quot;&gt;&lt;/a&gt;为什么造轮子&lt;/h2&gt;&lt;p&gt;在我们内部有不少项目需要下载功能，之前因为种种原因，并没有单独设计一套下载模块，而且原有项目中的方案还是基于 NSURLConnection，缺失了不少 NSURLSession 提供的新特性，失去了抽取并独立为模块的意义，为此我们在一次新的项目开发中重新开始设计。在前期 我们在 github 上也参考了不少下载模块开源项目，但综合看了一遍，并没有太完美的方案，主要参考和借鉴了 &lt;a href=&quot;https://github.com/Heikowi/HWIFileDownload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HWIFileDownload&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/thibaultCha/TCBlobDownload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TCBlobDownload&lt;/a&gt; 这两个不错的项目，基于我们的需求重新搞了一套，&lt;/p&gt;
&lt;p&gt;总结了下，提供了如下特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于 NSURLSession，支持多任务、后台下载、断点续传&lt;/li&gt;
&lt;li&gt;采用 CoreData 存储下载数据，并提供了一套下载管理界面，显示下载中和已下载的任务&lt;/li&gt;
&lt;li&gt;使用 Protocol 扩展下载信息，提供了 Delegate 和 Block 两种回调方式，便于替换到现有项目&lt;/li&gt;
&lt;li&gt;处理了较多的异常情况，例如用户手动把后台的 app 杀掉&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说几点开发下载模块时遇到的问题和注意点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;BackgroudSession 创建的 identifier 需要一一对应，和默认提供的单例方法有冲突，需要提供单例和创建实例两种方式，这在一开始设计的时候并没有觉得是多大的问题，直到下载模块被越来越多的其他模块依赖就需要提供多个后台下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;断点续传有时候会在 app 第二次启动恢复下载时失效，需要重新开始下载。解决方法是需要检查 &lt;code&gt;NSURLSessionDownloadTask&lt;/code&gt; 生成的 resumeData 的合法性，resumeData 存的内容为 plist 文件，一般为 4kb 大小，里面的 tmp 文件路径在 iOS 9 和 iOS 9 之前的存储是有差异的，需要区分对待，并且第二次启动后需要矫正 tmp 文件路径，有时也可能出现 tmp 文件不存在的情况也需要考虑到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;后台下载在 app 退到后台或者遇到 crash 时也会正常继续下载，除非用户主动把 app 在后台杀死，此时更好的设计是提供一套后台蒙版，显示后台正在进行下载中…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户后台主动杀死app会按照取消逻辑处理，第二次启动后，逻辑需要修正，此时可以通过 &lt;code&gt;- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error&lt;/code&gt; 返回的 error 区分是否为上次后台杀死的任务，检查 error.userInfo 的 key NSURLErrorBackgroundTaskCancelledReasonKey &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;正确理解 NSURLSession &lt;code&gt;- (void)getTasksWithCompletionHandler:(void (^)(NSArray&amp;lt;NSURLSessionDataTask *&amp;gt; *dataTasks, NSArray&amp;lt;NSURLSessionUploadTask *&amp;gt; *uploadTasks, NSArray&amp;lt;NSURLSessionDownloadTask *&amp;gt; *downloadTasks))completionHandler;&lt;/code&gt; 的用法，此回调主要是用来处理上次 app 未结束的任务，处理的任务有下载完成，下载取消，下载进行中几种可能，下载中的任务需要重新 和 UI 绑定，下载完成的任务需要正确处理好解压或者路径移动的问题，下载取消的任务状态要调整为暂停并且确保 UI 正确显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;处理 &lt;code&gt;- (void)application:(UIApplication *)anApplication handleEventsForBackgroundURLSession:(NSString *)aBackgroundURLSessionIdentifier completionHandler:(void (^)())aCompletionHandler&lt;/code&gt; 方法，此时的 aCompletionHandler的回调需要正确保存和执行，可以让退到后台的应用刷新后台截图，或者触发新的下载任务，适合一个接一个下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当 WIFI 状态切换时，需要重新创建 NSURLSession，NSURLSession的销毁回调是异步的，期间调用下载可能导致闪退问题，暂时没有更好的处理方法，需要处理好逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSURLSession 后下载无法控制下载的数目，系统会自动优化，所以需要控制队列，通过 NSOperationQueue 方式可能更好，目前的方式是数组维护，逻辑处理不完善时会存在触发多个下载的问题，在这个地方没有抽象好是一个遗憾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断系统剩余空间暂时没有提供更好的方法，这个点其实目前还没有处理好，因为 URLSession 接口并没有类似 URLConnection 的方法 &lt;code&gt;- (void)connection:(NSURLConnection*)connection didReceiveResponse:(NSURLResponse *)response&lt;/code&gt;, 可以在下载开始后取到文件的大小从而判断是否符合当前空间大小，目前只是在下载之前提供回调接口判断，调用方需要在下载之前就可以取得下载文件的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;采用 CoreData 的存储方案是一个很有意思的点，之所以用这个有点偏重的方案是因为因为 CoreData 的一个特性 &lt;code&gt;NSFetchedResultsController&lt;/code&gt;，可以自动检测数据变化从而方便的属性 UI，所以在做下载管理界面的时候就特别合适处理多个任务的UI刷新，不需要设计一套复杂的逻辑，所以的刷新东西触发都由 CoreData 主动发起。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下载模块的设计很多时候是为了更好的给业务线使用，如果够用了就可以了，所以很多地方的设计并不是很通用，很多情况也没有太好的处理妥当，后续有机会我们会结合实际项目聊聊下载模块里面的一些设计思想和始终为处理好的疑难杂症，并根据项目使用继续维护好下载模块~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;HJMURLDownloader 是我们内部使用的 iOS 下载模块，基于 NSURLSession开发，已经在两个项目中使用，还算是比较稳定，在大家的努力下终于已经在 Github 上开源了，见&lt;a href=&quot;https://github.com/HujiangTechnology/HJMURLDownloader&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Android技术周刊第6期</title>
    <link href="http://yoursite.com/2016/03/07/android-technology-magazine-6/"/>
    <id>http://yoursite.com/2016/03/07/android-technology-magazine-6/</id>
    <published>2016-03-06T16:00:00.000Z</published>
    <updated>2016-04-04T13:23:52.000Z</updated>
    
    <content type="html">&lt;p&gt;本期重点推荐BestArticle中：影响编程效率的15个障碍；我相信，你看完之后，你一定会感同身受！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;KnowledgePool&quot;&gt;&lt;a href=&quot;#KnowledgePool&quot; class=&quot;headerlink&quot; title=&quot;KnowledgePool&quot;&gt;&lt;/a&gt;KnowledgePool&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_783ede030102xqa1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1核1G虚拟云主机下使用Ubuntu搭建GitLab服务器&lt;/a&gt; 随着git工具的使用普及，越来越多的开发团队开始使用git来管理他们的项目代码。小型团队和创业型公司对git的需求也是比较高，本文就讲了如何低成本的搭建有保障的稳定git。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;BestArticle&quot;&gt;&lt;a href=&quot;#BestArticle&quot; class=&quot;headerlink&quot; title=&quot;BestArticle&quot;&gt;&lt;/a&gt;BestArticle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.race604.com/android-auto-version/?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更优雅的 Android 发布自动版本号方案&lt;/a&gt; 如果您的项目是用 Git 管理的，并且恰巧又是使用 Gradle 编译（应该绝大部分都是这样的了吧？），本文试图找到一种更加优雅的自动版本管理方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/producers-and-consumers-mode/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;聊聊并发——生产者消费者模式&lt;/a&gt; 在并发编程中使用生产者和消费者模式能够解决绝大多数并发问题。该模式通过平衡生产线程和消费线程的工作能力来提高程序的整体处理数据的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.kanxue.com/bbs/showthread.php?t=179524&amp;amp;highlight=Android+%E5%8A%A0%E5%9B%BA+%E5%9B%BA&amp;amp;plg_auth=1&amp;amp;plg_nld=1&amp;amp;plg_dev=1&amp;amp;plg_uin=1&amp;amp;plg_usr=1&amp;amp;plg_vkey=1&amp;amp;plg_nld=1&amp;amp;from=timeline&amp;amp;isappinstalled=0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;『Android安全』版优秀和精华帖分类索引&lt;/a&gt; Android安全相关文章索引，看雪论坛，Android安全板块，干货多多，强烈建议关注！！！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.chinagdg.com/thread-32016-1-1.html#rd?sukey=a76cdd086edb4fce23a29a190aa2dac11f7d878e7b6bb665d967f4aed53b8a7f9e8fcc84d0de1e9542eb900ed5688b23&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;看 Twitter 如何利用 Android 6.0 中的“瞌睡模式”来改进通知性能&lt;/a&gt; Google Cloud Messaging (GCM)与 Android 6.0 Marshmallow 中的瞌睡模式（Doze）配合使用，为用户带来性能和可用性改进。二者配合使用的情况下，普通优先级的消息允许设备保持瞌睡模式，而高优先级的消息则会使设备退出瞌睡模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://frogermcs.github.io/MultiDex-solution-for-64k-limit-in-Dalvik/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MultiDex solution for 64k limit in Dalvik.&lt;/a&gt; Almost every Android developer knows sad true - Dalvik, Android’s virtual machine used by applications and some system services has one major limit - single .dex file (bytecode interpreted by Dalvik VM) can have only 64k (exactly 65536) methods.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.codeceo.com/article/15-barriers-to-better-code.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;影响编程效率的15个障碍&lt;/a&gt; 现实世界中的15个编程障碍。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DevTools&quot;&gt;&lt;a href=&quot;#DevTools&quot; class=&quot;headerlink&quot; title=&quot;DevTools&quot;&gt;&lt;/a&gt;DevTools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NDM2MjAwNw==&amp;amp;mid=401697701&amp;amp;idx=1&amp;amp;sn=448b8606b016bfd2fa6a12bb963548b2&amp;amp;scene=1&amp;amp;srcid=0309YbdqCFlu7YgefevjB35z&amp;amp;key=710a5d99946419d90af29c75988e07a9474f3955d4668c6cc1f36b4603c090bb57bf4fe8a7cfefaf2711988524e98545&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网络请求–Retrofit2使用方法&lt;/a&gt; Retrofit是Square开发的网络请求库, 简化了网络请求的使用, 这个库太知名了, 好处我就不多说了. 让我们看看如何使用吧? (注: Retrofit2的beta3版本)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FantasticLibs&quot;&gt;&lt;a href=&quot;#FantasticLibs&quot; class=&quot;headerlink&quot; title=&quot;FantasticLibs&quot;&gt;&lt;/a&gt;FantasticLibs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/maoruibin/TranslateApp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TranslateApp（咕咚翻译）&lt;/a&gt; 一个实现『划词翻译』功能的 Android 应用 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/geometer/FBReaderJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FBReaderJ&lt;/a&gt; 同样是一个实现『划词翻译』功能的 Android 应用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本期重点推荐BestArticle中：影响编程效率的15个障碍；我相信，你看完之后，你一定会感同身受！&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android技术周刊" scheme="http://yoursite.com/tags/Android%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>iOS技术周刊第2期</title>
    <link href="http://yoursite.com/2016/03/06/ios-technology-magazine-2/"/>
    <id>http://yoursite.com/2016/03/06/ios-technology-magazine-2/</id>
    <published>2016-03-05T16:00:00.000Z</published>
    <updated>2016-03-13T13:51:59.000Z</updated>
    
    <content type="html">&lt;p&gt;本周重点在性能优化和Hybrid方面，包含&lt;code&gt;AsyncDisplayKit&lt;/code&gt;的实践，RN相关等，另外App开发人员也应该了解一些API设计，本期重点介绍API建模工具RAML，希望大家能够有所收获。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;原创&quot;&gt;&lt;a href=&quot;#原创&quot; class=&quot;headerlink&quot; title=&quot;原创&quot;&gt;&lt;/a&gt;原创&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/05/asyncdisplaykit-practice/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度实践 AsyncDisplayKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mobilev5.github.io/2016/03/06/using-raml-build-api-doc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用RAML来构建API文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Hybrid&quot;&gt;&lt;a href=&quot;#Hybrid&quot; class=&quot;headerlink&quot; title=&quot;Hybrid&quot;&gt;&lt;/a&gt;Hybrid&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20150811/12985.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIWebView与JS的深度交互&lt;/a&gt;，禁用获取的HTML文本中自带的 &amp;lt; img &amp;gt; 标签自动加载，并把下载图片的操作放在native端来处理，提高响应速度并且节省用户流量，同时也能在本地对图片各种操作，一个不错的交互实践。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bang590/JSPatch/wiki/JSPatch-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSPatch 实现原理详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ele828/react-native-guide#%E5%B7%A5%E5%85%B7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native各类学习资源&lt;/a&gt;，资料很全面，包含开源app，以及一些工具和组件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;性能优化&quot;&gt;&lt;a href=&quot;#性能优化&quot; class=&quot;headerlink&quot; title=&quot;性能优化&quot;&gt;&lt;/a&gt;性能优化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/#more-41893&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS 保持界面流畅的技巧&lt;/a&gt;，很详细的分析了界面卡顿的原因，以及对应的解决方法的研究方向（&lt;em&gt;异步绘制&lt;/em&gt;，&lt;em&gt;预排版&lt;/em&gt;，&lt;em&gt;预渲染&lt;/em&gt;，&lt;em&gt;全局并发控制&lt;/em&gt;）和实践，相当不错哦，值得你拥有。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NTIyNTUyMQ==&amp;amp;mid=447105405&amp;amp;idx=1&amp;amp;sn=054dc54289a98e8a39f2b9386f4f620e&amp;amp;scene=23&amp;amp;srcid=0108RhyzhXk9wUwQvnW3cmZT#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内存恶鬼drawRect - 谈画图功能的内存优化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;网络&quot;&gt;&lt;a href=&quot;#网络&quot; class=&quot;headerlink&quot; title=&quot;网络&quot;&gt;&lt;/a&gt;网络&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/cc756016243b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS的TCP/IP协议族剖析&amp;amp;&amp;amp;Socket&lt;/a&gt;，主要介绍了TCP/IP的工作原理以及Socket的原理和实现细节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;绘图&quot;&gt;&lt;a href=&quot;#绘图&quot; class=&quot;headerlink&quot; title=&quot;绘图&quot;&gt;&lt;/a&gt;绘图&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ciechanowski.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;神奇的Transform&lt;/a&gt;，看看我们可以通过transform来做点什么，简直太好玩了，不服来看😏😏&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/apple/swift/tree/master/benchmark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift基准测试套件&lt;/a&gt;，包含基准测试驱动以及显示性能的一些度量，协助开发者创建更快更高效的代码。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.cnbluebox.com/blog/2015/03/05/chisel/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chisel-LLDB命令插件，让调试更Easy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://camsong.github.io/redux-in-chinese/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux可预测化的状态管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;后花园&quot;&gt;&lt;a href=&quot;#后花园&quot; class=&quot;headerlink&quot; title=&quot;后花园&quot;&gt;&lt;/a&gt;后花园&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=402973995&amp;amp;idx=1&amp;amp;sn=87625ad8a3e3d5b16baa0890d6eedfe8&amp;amp;scene=23&amp;amp;srcid=03050zf9BxGthj6HoRiTCmb3#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员VS武林高手：技术为外功，思维乃内力&lt;/a&gt;，真气雄浑，滚滚不可测，吐气如剑，拈花摘叶，老司机今天带你重新认识当代武林高手－程序员。&lt;/li&gt;
&lt;li&gt;大妈喊你还债了，&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=402964742&amp;amp;idx=1&amp;amp;sn=60a657a4eeca714bee80e861406c6443&amp;amp;scene=23&amp;amp;srcid=0305FCtWZQFUXz2Xx4PePzCx#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;年前挖的坑都填了吗？技术债务偿还计划&lt;/a&gt;😄😄&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/ff4a34a5a136&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你不可错过的50部电影清单！（附评分、推荐语）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;amp;mid=404242829&amp;amp;idx=1&amp;amp;sn=aacddf1c2c828281e6202eff8cd374f5&amp;amp;scene=1&amp;amp;srcid=0302Q1dT8nUezoEZLZzistUl&amp;amp;key=710a5d99946419d96e1c7481a2d8dae6400769cbc8bc9015cca38f9694d8c1ae46c0ff571ec714de57c149dd6aef6796&amp;amp;ascene=0&amp;amp;uin=Mzg1OTg2NQ%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;并发之痛 Thread，Goroutine，Actor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本周重点在性能优化和Hybrid方面，包含&lt;code&gt;AsyncDisplayKit&lt;/code&gt;的实践，RN相关等，另外App开发人员也应该了解一些API设计，本期重点介绍API建模工具RAML，希望大家能够有所收获。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS技术周刊" scheme="http://yoursite.com/tags/iOS%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
  <entry>
    <title>用RAML构建API文档</title>
    <link href="http://yoursite.com/2016/03/06/using-raml-build-api-doc/"/>
    <id>http://yoursite.com/2016/03/06/using-raml-build-api-doc/</id>
    <published>2016-03-05T16:00:00.000Z</published>
    <updated>2016-03-06T13:47:17.000Z</updated>
    
    <content type="html">&lt;p&gt;App开发人员应当了解的一些API知识，熟悉编写API文档的一些工具和方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;RESTful-API&quot;&gt;&lt;a href=&quot;#RESTful-API&quot; class=&quot;headerlink&quot; title=&quot;RESTful API&quot;&gt;&lt;/a&gt;RESTful API&lt;/h2&gt;&lt;p&gt;全称：Representational State Transfer(表现层状态转化)&lt;/p&gt;
&lt;p&gt;其实我们常见的GET, POST等的API都属于这类，RESTful有以下几个关键概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种设计风格而不是标准，只是提供了一组设计原则和约束条件&lt;/li&gt;
&lt;li&gt;资源，用一个URI（统一资源定位符）指向它，每种资源对应一个特定的URI&lt;/li&gt;
&lt;li&gt;Method&lt;ul&gt;
&lt;li&gt;GET：用来获取资源&lt;/li&gt;
&lt;li&gt;POST用来新建资源（也可以用于更新资源）&lt;/li&gt;
&lt;li&gt;PUT用来更新资源&lt;/li&gt;
&lt;li&gt;DELETE用来删除资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;RAML是啥？&quot;&gt;&lt;a href=&quot;#RAML是啥？&quot; class=&quot;headerlink&quot; title=&quot;RAML是啥？&quot;&gt;&lt;/a&gt;RAML是啥？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://raml.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RAML&lt;/a&gt;是一个API建模语言，完全遵守RESTful风格，有严格的语法来约束，采用&lt;a href=&quot;http://www.yaml.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yaml&lt;/a&gt;描述，可以通过一系列工具转化为HTML，Wiki等文档样式。&lt;/p&gt;
&lt;h2 id=&quot;开始写一个API&quot;&gt;&lt;a href=&quot;#开始写一个API&quot; class=&quot;headerlink&quot; title=&quot;开始写一个API&quot;&gt;&lt;/a&gt;开始写一个API&lt;/h2&gt;&lt;h3 id=&quot;先装个工具&quot;&gt;&lt;a href=&quot;#先装个工具&quot; class=&quot;headerlink&quot; title=&quot;先装个工具&quot;&gt;&lt;/a&gt;先装个工具&lt;/h3&gt;&lt;p&gt;采用Atom插件 &lt;a href=&quot;http://apiworkbench.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API Workbench&lt;/a&gt; 打造一个可视化工具，自动化提示，语法检测等功能，一应俱全，非常适合编写RAML。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;api-workbench.png&quot; alt=&quot;API Workbench主要功能&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;熟读基本语法&quot;&gt;&lt;a href=&quot;#熟读基本语法&quot; class=&quot;headerlink&quot; title=&quot;熟读基本语法&quot;&gt;&lt;/a&gt;熟读基本语法&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/raml-org/raml-spec/blob/master/raml-0.8.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击查看&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建API工程&quot;&gt;&lt;a href=&quot;#创建API工程&quot; class=&quot;headerlink&quot; title=&quot;创建API工程&quot;&gt;&lt;/a&gt;创建API工程&lt;/h3&gt;&lt;p&gt;本文例子采用v0.8版本，目前1.0版本配套的工具还不太完善，等后续更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API 头部&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#%RAML 0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; A6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;version:&lt;/span&gt; v2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;baseUri:&lt;/span&gt; http://&amp;#123;apiDomain&amp;#125;.hujiang.com/&amp;#123;version&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;baseUriParameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  apiDomain:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    description:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      The sub-domain at which the API is accessible.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;    enum:&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt; , &lt;span class=&quot;string&quot;&gt;&quot;yz.test&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;qa.test&quot;&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;mediaType:&lt;/span&gt;  application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;protocols:&lt;/span&gt; [ HTTP, HTTPS ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;documentation:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - title:&lt;/span&gt; 类型定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    content:&lt;/span&gt; !include documentation/type-definition.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;resourceTypes:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - base:&lt;/span&gt; !include resourceTypes/base.raml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - collection:&lt;/span&gt; !include resourceTypes/collection.raml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;schemas:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - test:&lt;/span&gt; !include schemas/test-schema.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;API 实体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有几个关键词： &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;uriParameters&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;queryParameters&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;，具体可参看文档 &lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/test/&amp;#123;uriParam1&amp;#125;/&amp;#123;uriParam2&amp;#125;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; collection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  displayName:&lt;/span&gt; 获取xxxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  uriParameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    screenWidth:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      required:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      displayName:&lt;/span&gt; uriParam1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      description:&lt;/span&gt; uriParam1说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      type:&lt;/span&gt; integer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    screenHeight:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      required:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      displayName:&lt;/span&gt; uriParam2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      description:&lt;/span&gt; uriParam2说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      type:&lt;/span&gt; integer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  get:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    description:&lt;/span&gt; 获取xx内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    queryParameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      param1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        required:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        displayName:&lt;/span&gt; param1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        description:&lt;/span&gt; param1说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        type:&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    responses:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        body:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          application/json:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            schema:&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;            example:&lt;/span&gt; !include examples/test-example.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;ResourceTypes&quot;&gt;&lt;a href=&quot;#ResourceTypes&quot; class=&quot;headerlink&quot; title=&quot;ResourceTypes&quot;&gt;&lt;/a&gt;ResourceTypes&lt;/h3&gt;&lt;p&gt;资源类型统一描述，常见的统一定义HTTP Header，示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;get?:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  headers:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    Hujiang-Agent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      description:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        统一的沪江Agent定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;      required:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Documentation&quot;&gt;&lt;a href=&quot;#Documentation&quot; class=&quot;headerlink&quot; title=&quot;Documentation&quot;&gt;&lt;/a&gt;Documentation&lt;/h3&gt;&lt;p&gt;API的一些说明性文档，例如某些特定值的定义和说明，注意事项等&lt;/p&gt;
&lt;h3 id=&quot;Schemas&quot;&gt;&lt;a href=&quot;#Schemas&quot; class=&quot;headerlink&quot; title=&quot;Schemas&quot;&gt;&lt;/a&gt;Schemas&lt;/h3&gt;&lt;p&gt;定义返回结构中的数据定义，示例：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;required&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;$schema&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;http://json-schema.org/draft-03/schema&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;array&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;items&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;properties&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;adType&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;integer&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;参看广告类型定义&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;required&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;adId&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;integer&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;description&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;广告位ID&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;required&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;adItemList&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;array&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;description&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;广告条列表，最大不超过6个&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;required&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;items&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt; ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外在API头部可以统一include，方便后续API实体中直接调用。&lt;/p&gt;
&lt;h3 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h3&gt;&lt;p&gt;根据上述的Schemas，提供一个API返回示例，便于用户更好地了解API，示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;adType&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;adId&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;10001&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;adItemList&quot;&lt;/span&gt; : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;adItemId&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1021021&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;title&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;广告条标题&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;summary&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;广告条描述&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;actionType&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;actionUrl&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;http://www.hujiang.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;startTime&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2016-2-29T17:54:46.203+08:00&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;endTime&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2016-3-29T17:54:46.203+08:00&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;imageUrl&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;http://i2.w.hjfile.cn/news/201602/201602247003009941.jpg&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;orderIndex&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;fillColor&quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1023123123123&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;scheme&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;hujiang://&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;appIdentifier&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;com.hujiang.normandy&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;生成HTML或wiki&quot;&gt;&lt;a href=&quot;#生成HTML或wiki&quot; class=&quot;headerlink&quot; title=&quot;生成HTML或wiki&quot;&gt;&lt;/a&gt;生成HTML或wiki&lt;/h3&gt;&lt;p&gt;基本差不多了，就要以找一些工具转成用户可以直观看到的文档，可以使用如下工具：&lt;/p&gt;
&lt;p&gt;raml2html: &lt;a href=&quot;https://github.com/raml2html/raml2html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/raml2html/raml2html&lt;/a&gt;&lt;br&gt;raml2wiki: &lt;a href=&quot;https://github.com/jhitchcock/raml2wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jhitchcock/raml2wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;它还可以做什么&quot;&gt;&lt;a href=&quot;#它还可以做什么&quot; class=&quot;headerlink&quot; title=&quot;它还可以做什么&quot;&gt;&lt;/a&gt;它还可以做什么&lt;/h2&gt;&lt;p&gt;既然是建模语言，所有的API定义，返回值都非常方便结构化，利用这些数据我们可以自制mock server，将API整个流程打通，非常期待大家的参与。&lt;/p&gt;
&lt;h2 id=&quot;RAML-vs-Swagger-vs-API-Blueprint&quot;&gt;&lt;a href=&quot;#RAML-vs-Swagger-vs-API-Blueprint&quot; class=&quot;headerlink&quot; title=&quot;RAML vs. Swagger vs. API Blueprint&quot;&gt;&lt;/a&gt;RAML vs. Swagger vs. API Blueprint&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.mikestowe.com/2014/07/raml-vs-swagger-vs-api-blueprint.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mikestowe&lt;/a&gt;上有专门针对这三类做了比较，最后综合得分RAML排首位，当然大家也要结合当下团队实力，选择合适的工具&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://raml.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RAML 官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom 官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bourgeois.me/rest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;REST best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codeplanet.io/principles-good-restful-api-design/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Principles of good RESTful API Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yaml.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YAML官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mikestowe.com/2014/07/raml-vs-swagger-vs-api-blueprint.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RAML vs. Swagger vs. API Blueprint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;App开发人员应当了解的一些API知识，熟悉编写API文档的一些工具和方法。&lt;/p&gt;
    
    </summary>
    
      <category term="API" scheme="http://yoursite.com/categories/API/"/>
    
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>深度实践 AsyncDisplayKit</title>
    <link href="http://yoursite.com/2016/03/05/asyncdisplaykit-practice/"/>
    <id>http://yoursite.com/2016/03/05/asyncdisplaykit-practice/</id>
    <published>2016-03-04T16:00:00.000Z</published>
    <updated>2016-03-06T11:18:40.000Z</updated>
    
    <content type="html">&lt;p&gt;追求极致的用户体验，从来都是我们锲而不舍的追求，对于iOS用户而言，这更是容不得一点马虎。随着时间的推移，现如今，谁还能忍受得了一个页面打开后，半天没有结果😭，出来之后滑动卡顿，点击个按钮半天木有反应啊，有木有？还好，还有&lt;code&gt;Facebook&lt;/code&gt;，这位互联网IT界的大佬，为我们带来了福音，它就是我们今天要讲的&lt;code&gt;AsyncDisplayKit&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;AsyncDisplayKit&lt;/code&gt; 可以给我们带来很棒的用户体验，主要是通过优化以下3点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图像解码&lt;/li&gt;
&lt;li&gt;页面布局&lt;/li&gt;
&lt;li&gt;页面元素渲染&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过把以上几项操作放在后台线程，从而避免了阻塞用户主线程。所以，通过这个库，如果使用得当，即使是复杂的页面布局我们仍可以获得丝滑般的无限接近60FPS的页面滚动体验，这一点，通过常规的&lt;code&gt;UIKit&lt;/code&gt;优化一般是达不到这个效果的😏。&lt;/p&gt;
&lt;p&gt;在本文中，我们通过一个开始的初级项目（主要是使用了&lt;code&gt;UICollectionView&lt;/code&gt;，有一些滚动体验不佳），通过使用&lt;code&gt;AsyncDisplayKit&lt;/code&gt;来优化提升它的性能。跟着我走，你将会学会如何在你自己的项目中使用  &lt;code&gt;AsyncDisplayKit&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;注意: 在开始之前, 你最好对 Swift, Core Animation 和 Core Graphics这些知识已经有所了解.&lt;/p&gt;
&lt;h2 id=&quot;开始了&quot;&gt;&lt;a href=&quot;#开始了&quot; class=&quot;headerlink&quot; title=&quot;开始了&quot;&gt;&lt;/a&gt;开始了&lt;/h2&gt;&lt;p&gt;开始之前，如果有时间的话，你最好看一下&lt;a href=&quot;https://code.facebook.com/posts/721586784561674/introducing-AsyncDisplayKit-for-smooth-and-responsive-apps-on-ios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AsyncDisplayKit的介绍&lt;/a&gt;，这样你会对 &lt;code&gt;AsyncDisplayKit&lt;/code&gt;的主要功能有一个初步的认识。项目源码&lt;em&gt;(EMAIL ME:1043370115@QQ.COM)&lt;/em&gt;，先跑起来看看（需要Xcode 6.3 和 the iOS 8.3 SDK 以上环境）。为了能比较明显的看到使用这个库的差异，最好在老一点的设备上运行，如果是模拟器，看到的性能提升不明显，你懂的😏。运行起来，看起来是这样的:&lt;br&gt;&lt;img src=&quot;http://cdn4.raywenderlich.com/wp-content/uploads/2014/10/IMG_0002.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;像你现在看到的，这个app的主页面是一个众多动物卡片组成的一个&lt;code&gt;UICollectionView&lt;/code&gt;,每一个卡片包含了一张图片，一条文字描述，以及一个由主图片经过模糊处理的背景。&lt;br&gt;&lt;/p&gt;
&lt;p&gt; 滚动一下这个页面，注意它的帧率，（我使用的是iPad 3，大概只有20FPS），失帧很严重啊，所以你的直观触觉就是界面很不流畅，卡顿实实在在的。好吧，在这篇文章结束的时候，我们的目标就是要把它搞到（或者无限接近）60FPS。&lt;br&gt;&lt;/p&gt;
&lt;p&gt; &amp;gt;&lt;br&gt; 注意: 这个项目里你看到的所有图片都是放在本地地资源文件里面的，没有一个是从网络下载来的。&lt;/p&gt;
&lt;h2 id=&quot;测试响应能力&quot;&gt;&lt;a href=&quot;#测试响应能力&quot; class=&quot;headerlink&quot; title=&quot;测试响应能力&quot;&gt;&lt;/a&gt;测试响应能力&lt;/h2&gt;&lt;p&gt;在使用&lt;code&gt;AsyncDisplayKit&lt;/code&gt;优化你的项目之前，先通过&lt;code&gt;Instruments&lt;/code&gt;来检测一下你的应用的响应能力，这一点很重要，可以确保你知道优化后&lt;code&gt;AsyncDisplayKit&lt;/code&gt;给你带来了什么变化。&lt;br&gt;&lt;br&gt;最重要的是，影响性能的因素中，无非就是&lt;code&gt;CPU&lt;/code&gt;，&lt;code&gt;GPU&lt;/code&gt;这两块，所以优化前，你应该首先弄清楚你的性能瓶颈在哪里，究竟是受制于&lt;code&gt;CPU&lt;/code&gt;还是&lt;code&gt;GPU&lt;/code&gt;，是哪一个降低了你应用的FPS。搞清楚这个之后，你可以看到&lt;code&gt;AsyncDisplayKit&lt;/code&gt;是如何利用它的特性来帮你优化的。&lt;br&gt;&lt;br&gt;如果你有时间的话，你可以使用&lt;code&gt;Instruments&lt;/code&gt;来监测一下我们一开始提供的那个项目的性能瓶颈，你会发现它是受制于&lt;code&gt;CPU&lt;/code&gt;的。&lt;/p&gt;
&lt;h2 id=&quot;准备切换到AsyncDisplayKit&quot;&gt;&lt;a href=&quot;#准备切换到AsyncDisplayKit&quot; class=&quot;headerlink&quot; title=&quot;准备切换到AsyncDisplayKit&quot;&gt;&lt;/a&gt;准备切换到AsyncDisplayKit&lt;/h2&gt;&lt;p&gt;在已存在的项目上使用&lt;code&gt;AsyncDisplayKit&lt;/code&gt;很简单，就是把&lt;code&gt;view hierarchies&lt;/code&gt;或者/和 &lt;code&gt;layer trees&lt;/code&gt;替换为&lt;code&gt;display node hierarchies&lt;/code&gt;。  &lt;code&gt;Display nodes&lt;/code&gt;是&lt;code&gt;AsyncDisplayKit&lt;/code&gt;中很重要的一个概念，它是基于views之上并且线程安全的，这意味着我们平常习惯于在主线程中做的那些views有关的部分工作现在可以脱离主线程了，是不是很惊奇？没错，这就是最大的魅力所在，所以你就可以把有限的资源去处理更重要的事情了，比如&lt;code&gt;touch event&lt;/code&gt;或者&lt;code&gt;scroll view&lt;/code&gt;的滚动。所以接下来第一步，就是去掉&lt;code&gt;view hierarchy&lt;/code&gt;。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Removing-the-View-Hierarchy&quot;&gt;&lt;a href=&quot;#Removing-the-View-Hierarchy&quot; class=&quot;headerlink&quot; title=&quot;Removing the View Hierarchy&quot;&gt;&lt;/a&gt;Removing the View Hierarchy&lt;/h3&gt;&lt;p&gt;打开 &lt;code&gt;RainforestCardCell.swift&lt;/code&gt;，在 &lt;code&gt;awakeFromNib()&lt;/code&gt; 删除所有的 &lt;code&gt;addSubview(...)&lt;/code&gt; 调用, 像这样:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;awakeFromNib&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.awakeFromNib()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentView.layer.borderColor =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;(hue: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, saturation: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, brightness: &lt;span class=&quot;number&quot;&gt;0.85&lt;/span&gt;, alpha: &lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;).&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentView.layer.borderWidth = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;替换&lt;code&gt;layoutSubviews()&lt;/code&gt; 为下面的：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;layoutSubviews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.layoutSubviews()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;替换&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt; 为下面的：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configureCellDisplayWithCardInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cardInfo: RainforestCardInfo)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//MARK: Image Size Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(named: cardInfo.imageName)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  featureImageSizeOptional = image.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;删除&lt;code&gt;RainforestCardCell&lt;/code&gt;中所有的&lt;code&gt;view&lt;/code&gt;属性，剩下来的像这样：&lt;br&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RainforestCardCell&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UICollectionViewCell&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featureImageSizeOptional: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后保存并运行，结果像这样：&lt;br&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/10/IMG_0001.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;现在都是一些空的cells,所以你滚动起来相当顺滑，我们的目标就是当这些cell填上内容之后，仍然保持这样的触感。在你每做一步之后，你可以使用&lt;code&gt;Instruments’s Core Animation template&lt;/code&gt;来观察app的帧率有什么变化。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Adding-a-Placeholder&quot;&gt;&lt;a href=&quot;#Adding-a-Placeholder&quot; class=&quot;headerlink&quot; title=&quot;Adding a Placeholder&quot;&gt;&lt;/a&gt;Adding a Placeholder&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;RainforestCardCell.swift&lt;/code&gt;中添加一个属性&lt;code&gt;placeholderLayer&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RainforestCardCell&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UICollectionViewCell&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featureImageSizeOptional: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderLayer: &lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用placeholder是因为我们的cell的内容展示的时候是异步的，为了不让用户看到空的cell。这就像我们从网络下载图片的时候的做法一样，当图片下载完成之前先设置一个placeholder。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;awakeFromNib()&lt;/code&gt;中，配置&lt;code&gt;placeholderLayer&lt;/code&gt;，然后该方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;awakeFromNib&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.awakeFromNib()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	placeholderLayer = &lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	placeholderLayer.contents = 	&lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(named:&lt;span class=&quot;string&quot;&gt;&quot;cardPlaceholder&quot;&lt;/span&gt;)!.&lt;span class=&quot;type&quot;&gt;CGImage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	placeholderLayer.contentsGravity = kCAGravityCenter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	placeholderLayer.contentsScale = &lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.mainScreen().scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	placeholderLayer.backgroundColor = &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;(hue: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, saturation: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, 		brightness: &lt;span class=&quot;number&quot;&gt;0.85&lt;/span&gt;, alpha: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	contentView.layer.addSublayer(placeholderLayer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;layoutSubviews()&lt;/code&gt;, 加载&lt;code&gt;placeholderLayer&lt;/code&gt;,修改后的方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;layoutSubviews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.layoutSubviews()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	placeholderLayer?.frame = bounds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行，看起来是这样：&lt;br&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/10/IMG_0003.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;普通的&lt;code&gt;CALayers&lt;/code&gt;单独使用，没有与view关联的时候，当你改变frame的时候它们会有一个隐式的动画，所以你应该会看到当那个layer加载出来的时候有一个缩放的动画，为了修改这个问题，我们重写&lt;code&gt;layoutSubviews&lt;/code&gt;方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;layoutSubviews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.layoutSubviews()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CATransaction&lt;/span&gt;.begin()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CATransaction&lt;/span&gt;.setValue(kCFBooleanTrue,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  forKey:kCATransactionDisableActions)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  placeholderLayer?.frame = bounds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CATransaction&lt;/span&gt;.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新编译运行，你会发现刚才的问题解决了。&lt;/p&gt;
&lt;h2 id=&quot;Your-First-Node&quot;&gt;&lt;a href=&quot;#Your-First-Node&quot; class=&quot;headerlink&quot; title=&quot;Your First Node&quot;&gt;&lt;/a&gt;Your First Node&lt;/h2&gt;&lt;p&gt;我们要重构这个app的第一步就是添加一个node，在这一部分，我们将要处理以下几个任务：&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建，布局，添加 node 到 cell 中&lt;/li&gt;
&lt;li&gt;重用 cell 以及其中的 node 和 layer&lt;/li&gt;
&lt;li&gt;对 image node 做 blur 处理 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，在 &lt;code&gt;Layers-Bridging-Header.h&lt;/code&gt;中导入&lt;code&gt;AsyncDisplayKit&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;lt;AsyncDisplayKit/AsyncDisplayKit.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;项目结构梳理&quot;&gt;&lt;a href=&quot;#项目结构梳理&quot; class=&quot;headerlink&quot; title=&quot;项目结构梳理&quot;&gt;&lt;/a&gt;项目结构梳理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;View Controller : &lt;code&gt;RainforestViewController&lt;/code&gt; 实际上不做什么事情，只是简单的获得数据源并实现&lt;code&gt;UICollectionView&lt;/code&gt;的代理。&lt;/li&gt;
&lt;li&gt;Data Source : view controller 生成并重用cell，通过调用&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;配置cell。&lt;/li&gt;
&lt;li&gt;Cell : 在 &lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;方法中，cell生成node并添加到cell上面，然后布局nodes。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这意味着每一次重用cell的时候，都会重复这些动作 。&lt;br&gt;如果你是用views代替nodes，那这样绝对不是最好的做法。但是现在用的是nodes，因为nodes的生成，布局以及填充，这些步骤都是可以放在异步线程做的，所以目前还不是问题，当然我们后续还会优化。唯一的问题是这样做的话，你不能很方便的取消这些异步操作或者是在重用cell的时候删除nodes。&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note : 在实际的开发中，你可以选择使用ASRangeController来缓存nodes，这样你就不需要在每次重用cell的时候去重新生成nodes。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Adding-the-Background-Image-Node&quot;&gt;&lt;a href=&quot;#Adding-the-Background-Image-Node&quot; class=&quot;headerlink&quot; title=&quot;Adding the Background Image Node&quot;&gt;&lt;/a&gt;Adding the Background Image Node&lt;/h3&gt;&lt;p&gt;打开 &lt;code&gt;RainforestCardCell.swift&lt;/code&gt; 然后替换 &lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt; 为如下:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configureCellDisplayWithCardInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cardInfo: RainforestCardInfo)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//MARK: Image Size Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(named: cardInfo.imageName)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	featureImageSizeOptional = image.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//MARK: Node Creation Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; backgroundImageNode = &lt;span class=&quot;type&quot;&gt;ASImageNode&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	backgroundImageNode.image = image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	backgroundImageNode.contentMode = .&lt;span class=&quot;type&quot;&gt;ScaleAspectFill&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ASImageNode&lt;/code&gt;是&lt;code&gt;AsyncDisplayKit&lt;/code&gt;中用来做展示用的众多nodes中的一种，等价于&lt;code&gt;UIKit&lt;/code&gt;中的&lt;code&gt;UIImageView&lt;/code&gt;，只是&lt;code&gt;ASImageNode&lt;/code&gt;默认情况下的图片解码操作是异步的。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;的末尾添加下面一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;backgroundImageNode.layerBacked = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Nodes有两种模式，一般情况下当需要处理某些事件的时候比如&lt;code&gt;touch event&lt;/code&gt;，我们采用&lt;code&gt;view-backed&lt;/code&gt;模式，反之如果只是纯粹的展示则采用&lt;code&gt;layer-backed&lt;/code&gt;模式，&lt;code&gt;layer-backed&lt;/code&gt;模式相对而言是轻量级的，会有更好一点的性能。由于我们这个项目中不需要处理事件，所以&lt;code&gt;backgroundImageNode&lt;/code&gt;采用&lt;code&gt;layer-backed&lt;/code&gt;模式。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;的末尾继续添加下面一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MARK: Node Layout Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;backgroundImageNode.frame = &lt;span class=&quot;type&quot;&gt;FrameCalculator&lt;/span&gt;.frameForContainer(featureImageSize: image.size)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;FrameCalculator&lt;/code&gt;是个辅助类，封装了cell的布局处理，返回每一个node的frame。如果你要适配多个设备尺寸，这里你要谨慎处理，你可以看到这里没有使用约束，因为&lt;code&gt;AsyncDisplayKit&lt;/code&gt;目前版本并不支持约束，希望后续支持吧。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;的末尾继续添加下面一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MARK: Node Layer and Wrap Up Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.layer.addSublayer(backgroundImageNode.layer)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面已经提到了，&lt;code&gt;AsyncDisplayKit&lt;/code&gt;会为&lt;code&gt;backgroundImageNode&lt;/code&gt;创建一个layer，但是你仍然需要把这个node添加到&lt;code&gt;layer tree&lt;/code&gt;中，它才可以在屏幕上显示。另外由于node的绘制是异步的，所以在绘制完成之前它是不会显示的，尽管你已经把它添加到&lt;code&gt;layer tree&lt;/code&gt;中了，这一点需要注意。当node的图片绘制完成之后，node的layer的content就会被更新，这个时候cell的 &lt;code&gt;content view&lt;/code&gt;的layer会有两个sublayer.&lt;/p&gt;
&lt;p&gt;你应该会注意到cell每次被取出重用的时候，&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;都会被调用，所以每次该方法调用的时候，我们都会添加一个新的layer到cell的contentview的layer上面，不过别担心，我们马上就会解决这个问题。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;RainforestCardCell.swift&lt;/code&gt;中新添加一个变量&lt;code&gt;backgroundImageNode&lt;/code&gt;像这样：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RainforestCardCell&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UICollectionViewCell&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featureImageSizeOptional: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderLayer: &lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; backgroundImageNode: &lt;span class=&quot;type&quot;&gt;ASImageNode&lt;/span&gt;? &lt;span class=&quot;comment&quot;&gt;///&amp;lt; ADD THIS LINE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加这个属性我们可以持有这个node，是因为在&lt;code&gt;ARC&lt;/code&gt;环境下，某些时候它会被释放，这样就不会显示在屏幕上了。node是持有它的layer的引用的，但是它的layer并不持有node，所以我们需要持有这个node。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;的末尾继续添加下面一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundImageNode = backgroundImageNode&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好了，目前为止，&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;是这样子的：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;configureCellDisplayWithCardInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cardInfo: RainforestCardInfo)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//MARK: Image Size Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image = &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(named: cardInfo.imageName)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  featureImageSizeOptional = image.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//MARK: Node Creation Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; backgroundImageNode = &lt;span class=&quot;type&quot;&gt;ASImageNode&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundImageNode.image = image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundImageNode.contentMode = .&lt;span class=&quot;type&quot;&gt;ScaleAspectFill&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundImageNode.layerBacked = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//MARK: Node Layout Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundImageNode.frame = &lt;span class=&quot;type&quot;&gt;FrameCalculator&lt;/span&gt;.frameForContainer(featureImageSize: image.size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//MARK: Node Layer and Wrap Up Section&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.layer.addSublayer(backgroundImageNode.layer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.backgroundImageNode = backgroundImageNode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行，你可以观察到&lt;code&gt;backgroundImageNode&lt;/code&gt;的图片的异步呈现，感觉一下效果吧。&lt;br&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/10/IMG_0006.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你运行在一个老一点的设备上，你会发现那些cell上的图片像爆米花一样一个个跳出来了，这并不是我们的理想结果，这个问题我们会放在最后解决。&lt;/p&gt;
&lt;p&gt;正如上面我已经提到的，每次cell重用的时候，都会有一个新的layer被加上去，你可以快速滚动页面，然后打个断点在cell里面，会发现很有多layer在上面，接下来我们就来处理这个问题。&lt;/p&gt;
&lt;h3 id=&quot;Handling-Cell-Reuse&quot;&gt;&lt;a href=&quot;#Handling-Cell-Reuse&quot; class=&quot;headerlink&quot; title=&quot;Handling Cell Reuse&quot;&gt;&lt;/a&gt;Handling Cell Reuse&lt;/h3&gt;&lt;p&gt;首先继续在&lt;code&gt;RainforestCardCell.swift&lt;/code&gt;, 添加个&lt;code&gt;contentLayer&lt;/code&gt;，像这样：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RainforestCardCell&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;UICollectionViewCell&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; featureImageSizeOptional: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; placeholderLayer: &lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; backgroundImageNode: &lt;span class=&quot;type&quot;&gt;ASImageNode&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; contentLayer: &lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt;? &lt;span class=&quot;comment&quot;&gt;///&amp;lt; ADD THIS LINE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;的末尾继续添加下面一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentLayer = backgroundImageNode.layer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后替换 &lt;code&gt;prepareForReuse()&lt;/code&gt;方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareForReuse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.prepareForReuse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	backgroundImageNode?.preventOrCancelDisplay = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于&lt;code&gt;AsyncDisplayKit&lt;/code&gt;可以异步绘制，nodes可以让你阻止任何正在进行的绘制，当你需要取消或者停止绘制的时候只需要设置它的&lt;code&gt;preventOrCancelDisplay&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;即可，这样你就可以在cell重用之前停止之前的所有绘制，是不是很赞？&lt;/p&gt;
&lt;p&gt;接下来，在&lt;code&gt;prepareForReuse()&lt;/code&gt;中再添加几行代码，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;contentLayer?.removeFromSuperlayer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contentLayer = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;backgroundImageNode = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这几行代码简单易懂，就是在cell重用之前，把相应的layer和node都删除，并确保被释放掉，这样就解决了上面提到的layer堆积的问题。&lt;br&gt;编译运行，这一次就不会有layer堆积了，并且在cell滚出屏幕可视范围后，取消不必要的绘制。&lt;/p&gt;
&lt;h3 id=&quot;Blurring-the-Image&quot;&gt;&lt;a href=&quot;#Blurring-the-Image&quot; class=&quot;headerlink&quot; title=&quot;Blurring the Image&quot;&gt;&lt;/a&gt;Blurring the Image&lt;/h3&gt;&lt;p&gt;为了添加blur效果，需要我们在imagenode的展示过程中加入一些步骤。在&lt;code&gt;RainforestCardCell.swift&lt;/code&gt;文件的&lt;code&gt;configureCellDisplayWithCardInfo(cardInfo:)&lt;/code&gt;方法中做点修改，在&lt;code&gt;backgroundImageNode.layerBacked = true&lt;/code&gt;后面添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;backgroundImageNode.imageModificationBlock = &amp;#123; input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; input == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; blurredImage = input.applyBlurWithRadius(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tintColor: &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;(white: &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, alpha: &lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    saturationDeltaFactor: &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maskImage: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    didCancel:&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; blurredImage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ASImageNode&lt;/code&gt;的&lt;code&gt;imageModificationBlock&lt;/code&gt;给了我们一个机会在展示原始图片之前可以做一些其他的操作，比如滤镜操作，模糊处理等。&lt;/p&gt;
&lt;p&gt;上面的代码，使用&lt;code&gt;imageModificationBlock&lt;/code&gt;，给cell的背景图加上了模糊效果。最关键的一点是imagenode把绘制动作和这个闭包操作放在了子线程，这样就使主线程运行顺畅，这个闭包把原始图片作为参数然后返回处理后的图片。&lt;/p&gt;
&lt;p&gt;这个模糊处理是使用了系统的方法，&lt;code&gt;UIImage&lt;/code&gt; 的 &lt;code&gt;blurring category&lt;/code&gt;，它主要是使用&lt;code&gt;Accelerate framework&lt;/code&gt; 基于&lt;code&gt;CPU&lt;/code&gt;来做的模糊操作。由于这个模糊处理会消耗内存同时也比较耗时，所以就支持了取消机制，&lt;code&gt;didCancel&lt;/code&gt;闭包会被多次调用来监测是否应该取消模糊操作。目前为止，上面的代码只是简单返回了&lt;code&gt;false&lt;/code&gt;，稍后我们就会来实际修改&lt;code&gt;didCancel&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Note&lt;/span&gt; : 还记得一开始的时候你滑动页面的时候是什么感觉么？那个模糊处理严重的阻塞了主线程，通过&lt;span class=&quot;type&quot;&gt;AsyncDisplayKit&lt;/span&gt;把这个操作放入子线程，现在大大提升了collection view滚动时候的体验。这简直就是一个天上，一个地下啊，有木有？&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行看看现在的效果吧：&lt;br&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/10/IMG_0009.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在你可以看到&lt;code&gt;collection view&lt;/code&gt;滚动起来是有多么的顺滑。&lt;/p&gt;
&lt;p&gt;当&lt;code&gt;collection view&lt;/code&gt;从重用队列取出一个cell重用的时候就开始了一个模糊处理操作，所以当你快速滚动的时候，&lt;code&gt;collection view&lt;/code&gt;就会重用每一个cell很多次，理所当然的就启动了很多模糊处理的操作。这个当然不合理了😏😏，所以我们的目标应该是当一个cell开始重用的时候，去取消之前的模糊处理操作。&lt;/p&gt;
&lt;p&gt;在前面我们已经可以在&lt;code&gt;prepareForReuse()&lt;/code&gt;中取消node的绘制，所以一旦我们有机会在合适的时候取消模糊操作的话，那就毫不犹豫的去取消吧。&lt;/p&gt;
&lt;h3 id=&quot;Canceling-the-Blur&quot;&gt;&lt;a href=&quot;#Canceling-the-Blur&quot; class=&quot;headerlink&quot; title=&quot;Canceling the Blur&quot;&gt;&lt;/a&gt;Canceling the Blur&lt;/h3&gt;&lt;p&gt;为了取消那些正在进行的blur操作，我们需要重新实现blur方法中的&lt;code&gt;didCancel&lt;/code&gt;闭包。添加如下代码到&lt;code&gt;imageModificationBlock&lt;/code&gt;中：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;backgroundImageNode.imageModificationBlock = &amp;#123; [&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; backgroundImageNode] input &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; input == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ADD FROM HERE...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; didCancelBlur: () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; isCancelled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; strongBackgroundImageNode = backgroundImageNode &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; isCancelledClosure = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isCancelled = strongBackgroundImageNode.preventOrCancelDisplay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NSThread&lt;/span&gt;.isMainThread() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isCancelledClosure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatch_sync(dispatch_get_main_queue(), isCancelledClosure)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isCancelled&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...TO HERE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很明显，我们这里需要使用一个&lt;code&gt;weak reference&lt;/code&gt;来避免&lt;code&gt;closure&lt;/code&gt;和&lt;code&gt;backgroundImageNode&lt;/code&gt;的循环引用。我们就使用&lt;code&gt;backgroundImageNode&lt;/code&gt;来决定是否需要取消模糊处理。&lt;/p&gt;
&lt;p&gt;上面的代码完成了如下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先获得&lt;code&gt;backgroundImageNode&lt;/code&gt;的一个强引用，为我们接下来的操作做准备。如果当这个闭包运行的时候&lt;code&gt;backgroundImageNode&lt;/code&gt;不存在了，那么&lt;code&gt;isCancelled&lt;/code&gt;就会为&lt;code&gt;true&lt;/code&gt;，blur操作就会被取消，那我们就别提做什么blur操作了。&lt;/li&gt;
&lt;li&gt;你会有疑问，在这个地方为什么取消blur的这个闭包中的代码会要求放在主线程来操作，这是因为一旦node创建了它的&lt;code&gt;layer&lt;/code&gt;或者&lt;code&gt;view&lt;/code&gt;之后，你就只能在主线程来访问node的属性了（这一点很重要）。由于我们需要使用node的&lt;code&gt;preventOrCancelDisplay&lt;/code&gt;这个属性，而此时&lt;code&gt;backgroundImageNode&lt;/code&gt;的layer已经创建过了，所以我们必须把这个监测放在主线程中。&lt;/li&gt;
&lt;li&gt;由于我们需要确保&lt;code&gt;isCancelledClosure&lt;/code&gt;会在主线程来被调用，所以如果是在主线程就直接访问&lt;code&gt;preventOrCancelDisplay&lt;/code&gt;，否则的话就使用&lt;code&gt;dispatch_sync&lt;/code&gt;来在主线程访问。你又有疑问么😏，这里又为什么使用&lt;code&gt;dispatch_sync&lt;/code&gt;来同步执行，是因为我们必须在&lt;code&gt;didCancelBlur&lt;/code&gt;闭包返回之前给一个明确的结果，即返回一个确切的&lt;code&gt;isCancelled&lt;/code&gt;值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，在调用&lt;code&gt;applyBlurWithRadius(...)&lt;/code&gt;方法的地方，把刚才我们定义好的闭包作为值传给&lt;code&gt;didCancel&lt;/code&gt;这个参数，所以代码看起来像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; blurredImage = input.applyBlurWithRadius(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tintColor: &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;(white: &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, alpha: &lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  saturationDeltaFactor: &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  maskImage: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  didCancel: didCancelBlur) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行，你会发现有很大不同，现在当cell滚出屏幕后，它相应的blur操作也会被取消，这样我们会节省很多内存开销，同时减少了不必要的CPU时间片占用。你将会看到巨大的性能提升，尤其是在配置低一点的设备上。&lt;/p&gt;
&lt;p&gt;当然了，也不可能把所有的操作都搬到子线程，我们的卡片还需要其他的数据展示，在接下来的文章中，我们还将学习以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个node容器来绘制其他内容并添加到一个单一的&lt;code&gt;CALayer&lt;/code&gt;上面；&lt;/li&gt;
&lt;li&gt;自定义&lt;code&gt;ASDisplayNode&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;在子线程来创建node层级并布局sub nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以接下来，敬请期待吧😊😊😊&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;追求极致的用户体验，从来都是我们锲而不舍的追求，对于iOS用户而言，这更是容不得一点马虎。随着时间的推移，现如今，谁还能忍受得了一个页面打开后，半天没有结果😭，出来之后滑动卡顿，点击个按钮半天木有反应啊，有木有？还好，还有&lt;code&gt;Facebook&lt;/code&gt;，这位互联网IT界的大佬，为我们带来了福音，它就是我们今天要讲的&lt;code&gt;AsyncDisplayKit&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="页面布局" scheme="http://yoursite.com/tags/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>探索Today Extension的奥秘</title>
    <link href="http://yoursite.com/2016/03/01/swift-today-extension-practice/"/>
    <id>http://yoursite.com/2016/03/01/swift-today-extension-practice/</id>
    <published>2016-02-29T16:00:00.000Z</published>
    <updated>2016-03-05T11:59:27.000Z</updated>
    
    <content type="html">&lt;p&gt;本文重点介绍Today Extension的机制，并通过一个Demo讲解整个实现过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;extension并不是一个独立的app，它有一个包含在 app bundle 中的独立 bundle，extension 的bundle 后缀名是 .appex。其生命周期也和普通 app 不同。&lt;/li&gt;
&lt;li&gt;extension不能单独存在，必须有一个包含它的 Containing app。&lt;/li&gt;
&lt;li&gt;extension 需要用户手动激活  比如 Today 中的 widget 需要在 Today 中激活和关闭&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Today-extension-的特点&quot;&gt;&lt;a href=&quot;#Today-extension-的特点&quot; class=&quot;headerlink&quot; title=&quot;Today extension 的特点&quot;&gt;&lt;/a&gt;Today extension 的特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;可以在锁屏情况下 快速查看&lt;/li&gt;
&lt;li&gt;及时 简单直观 快速&lt;/li&gt;
&lt;li&gt;简单交互 不可以输入 打开 Container APP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;生命周期&quot;&gt;&lt;a href=&quot;#生命周期&quot; class=&quot;headerlink&quot; title=&quot;生命周期&quot;&gt;&lt;/a&gt;生命周期&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;app_extensions_lifecycle.png&quot; alt=&quot;生命周期&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;可以看到 Today 的生命周期分为3步 &lt;/p&gt;
&lt;h3 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h3&gt;&lt;p&gt;在用户打开Today 点击extension时，系统就会加载extension应用，这是生命周期的开始。&lt;/p&gt;
&lt;h3 id=&quot;执行任务&quot;&gt;&lt;a href=&quot;#执行任务&quot; class=&quot;headerlink&quot; title=&quot;执行任务&quot;&gt;&lt;/a&gt;执行任务&lt;/h3&gt;&lt;p&gt;extension启动后，开始执行它的代码。&lt;/p&gt;
&lt;h3 id=&quot;终止&quot;&gt;&lt;a href=&quot;#终止&quot; class=&quot;headerlink&quot; title=&quot;终止&quot;&gt;&lt;/a&gt;终止&lt;/h3&gt;&lt;p&gt;在用户取消任务，或者任务执行结束,系统会将其杀掉。&lt;/p&gt;
&lt;h2 id=&quot;通讯&quot;&gt;&lt;a href=&quot;#通讯&quot; class=&quot;headerlink&quot; title=&quot;通讯&quot;&gt;&lt;/a&gt;通讯&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;detailed_communication.png&quot; alt=&quot;通讯&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extension 是属于Today的插件 它和Today的通讯是直接的&lt;/li&gt;
&lt;li&gt;通过openURL的方式打开Container APP 当然也可打开其它的应用&lt;/li&gt;
&lt;li&gt;通过一个公共的数据区与Container来交换数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;数据共享&quot;&gt;&lt;a href=&quot;#数据共享&quot; class=&quot;headerlink&quot; title=&quot;数据共享&quot;&gt;&lt;/a&gt;数据共享&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;app_extensions_container_restrictions.png&quot; alt=&quot;数据共享&quot;&gt;&lt;br&gt;公共的数据区 extension 和 Container 都可以读写&lt;br&gt;其实是一个配置了相同 groupId 的 NSUserDefault&lt;/p&gt;
&lt;h2 id=&quot;Today-的尺寸&quot;&gt;&lt;a href=&quot;#Today-的尺寸&quot; class=&quot;headerlink&quot; title=&quot;Today 的尺寸&quot;&gt;&lt;/a&gt;Today 的尺寸&lt;/h2&gt;&lt;h3 id=&quot;iOS不同设备-Today-的宽度&quot;&gt;&lt;a href=&quot;#iOS不同设备-Today-的宽度&quot; class=&quot;headerlink&quot; title=&quot;iOS不同设备 Today 的宽度&quot;&gt;&lt;/a&gt;iOS不同设备 Today 的宽度&lt;/h3&gt;&lt;p&gt;iphone4s /5/5s/6/6s 只有竖屏一种情况 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;设备&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;横屏左&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;横屏右&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;竖屏左&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;竖屏右&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;iphone6/6s plus iOS 8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;666&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;666&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;414&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;414&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;iphone6/6s plus iOS 9&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;736&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;736&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;414&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;414&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;iPad&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;471&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;328&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;512&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;iPad Pro&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;629&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;437&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;471&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;328&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以看到 不同的设备 extension 的宽度是很不一样的&lt;br&gt;iPhone Plus 可以横屏&lt;br&gt;iPad 在横屏时候 分为左边和右边&lt;br&gt;iPad Pro 情况就更复杂,竖屏的时候相当于 iPad 的横屏 横屏的时候 宽度也很大&lt;br&gt;所以在设计 Extension 时候 最好用 autoLayout&lt;/p&gt;
&lt;h2 id=&quot;实践&quot;&gt;&lt;a href=&quot;#实践&quot; class=&quot;headerlink&quot; title=&quot;实践&quot;&gt;&lt;/a&gt;实践&lt;/h2&gt;&lt;p&gt;下面就花10分钟来 实践写一个最简单的 extension 具体可以看 Demo.&lt;br&gt;在 Demo 里我弄了一个非常简单的 App 就只是一个UITextField 和一个button&lt;br&gt;点击 OK 按钮, 会把UITextField的文本保存到公共的 Userdefault 里面. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;APPMain.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然还开启了一个 scheme 用来让 extension 可以通过 openUrl 来打开&lt;br&gt;另外 有一个 shareData文件&lt;br&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ShareData&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; key = &lt;span class=&quot;string&quot;&gt;&quot;com.hujiang.key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;GroupName&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;group.open.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; scheme = &lt;span class=&quot;string&quot;&gt;&quot;testExtension-appextention://&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getShareData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; userDefault = &lt;span class=&quot;type&quot;&gt;NSUserDefaults&lt;/span&gt;(suiteName: &lt;span class=&quot;type&quot;&gt;GroupName&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; userDefault?.objectForKey(key) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;saveShareData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shareDefault = &lt;span class=&quot;type&quot;&gt;NSUserDefaults&lt;/span&gt;(suiteName: &lt;span class=&quot;type&quot;&gt;GroupName&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	shareDefault?.setObject(string, forKey: key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	shareDefault?.synchronize()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;shareData 只是用来存储公共数据 包括3个常量和2个方法:&lt;br&gt;saveShareData 用来把值存到指定 GroupId 的 NSUserDefaults 中&lt;br&gt;getShareData 从指定 GroupId 的 NSUserDefaults 中取值  &lt;/p&gt;
&lt;p&gt;ok Container app 介绍完毕.下一步&lt;br&gt;添加一个 extension 的 Target 名称是 testEExtension&lt;/p&gt;
&lt;h2 id=&quot;配置证书&quot;&gt;&lt;a href=&quot;#配置证书&quot; class=&quot;headerlink&quot; title=&quot;配置证书&quot;&gt;&lt;/a&gt;配置证书&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;配置证书.png&quot; alt=&quot;配置证书&quot;&gt;&lt;br&gt;首先得要在 iTunes Connect 里配置 证书文件的 groupId 例如: group.com.hujiang.demo&lt;br&gt;注意,必须要以 group 开头&lt;/p&gt;
&lt;h2 id=&quot;开启-App-Group&quot;&gt;&lt;a href=&quot;#开启-App-Group&quot; class=&quot;headerlink&quot; title=&quot;开启 App Group&quot;&gt;&lt;/a&gt;开启 App Group&lt;/h2&gt;&lt;p&gt;在Xcode中 分别为container 和 extension 的Target   Target —&amp;gt; Capabilities&lt;br&gt;开启 app group 功能&lt;br&gt;开启好之后 工程里会有 两个entitlements 文件 &lt;/p&gt;
&lt;h2 id=&quot;修改info-Plist文件&quot;&gt;&lt;a href=&quot;#修改info-Plist文件&quot; class=&quot;headerlink&quot; title=&quot;修改info.Plist文件&quot;&gt;&lt;/a&gt;修改info.Plist文件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;plist.png&quot; alt=&quot;plist.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;####先说明一下这个Plist中 NSExtension下的几个字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NSExtensionAttributes 表明是那一种类型的 extension&lt;/li&gt;
&lt;li&gt;NSExtensionPrincipalClass  使用代码时 ViewControlle r的名称 &lt;/li&gt;
&lt;li&gt;NSExtensionMainStoryboard 使用 storyboard storyboard 文件名,默认是MainInterface.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果不使用 storyboard 就一定要指定 NSExtensionPrincipalClass&lt;br&gt;删除 NSExtensionMainStoryboard,然后添加 NSExtensionPrincipalClass&lt;br&gt;使用你的新ViewController的名字 &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这里我们不使用 Storyboard 我们用自定义的 TodayViewController 作为主界面.&lt;br&gt;首先删除 NSExtensionMainStoryboard字段 ,添加 NSExtensionPrincipalClass 字段,设置 NSExtensionPrincipalClass 的 value 为 TodayViewController.&lt;/p&gt;
&lt;h2 id=&quot;TodayViewController-的实现&quot;&gt;&lt;a href=&quot;#TodayViewController-的实现&quot; class=&quot;headerlink&quot; title=&quot;TodayViewController 的实现&quot;&gt;&lt;/a&gt;TodayViewController 的实现&lt;/h2&gt;&lt;p&gt;首先在 TodayViewController里添加一个 button&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var button: UIButton!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在 viewDidLoad 里面&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button = &lt;span class=&quot;type&quot;&gt;UIButton&lt;/span&gt;(type: .&lt;span class=&quot;type&quot;&gt;Custom&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button.frame = &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button.setTitle(&lt;span class=&quot;string&quot;&gt;&quot;open&quot;&lt;/span&gt;, forState: .&lt;span class=&quot;type&quot;&gt;Normal&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button.addTarget(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, action: &lt;span class=&quot;string&quot;&gt;&quot;openAction:&quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    forControlEvents: .&lt;span class=&quot;type&quot;&gt;TouchUpInside&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    view.addSubview(button)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.preferredContentSize = &lt;span class=&quot;type&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 self.preferredContentSize是控制显示这个 extension 的高度为300&lt;/p&gt;
&lt;p&gt;在viewWillAppear里显示存储的值&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(animated: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewWillAppear(animated)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    button.setTitle(&lt;span class=&quot;type&quot;&gt;ShareData&lt;/span&gt;.getShareData(), forState: .&lt;span class=&quot;type&quot;&gt;Normal&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;必须把ShareData 添加到 extension的Target 里面&lt;/p&gt;
 &lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;openAction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sender: AnyObject?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; url = &lt;span class=&quot;type&quot;&gt;NSURL&lt;/span&gt;(string: &lt;span class=&quot;type&quot;&gt;ShareData&lt;/span&gt;.scheme + &lt;span class=&quot;string&quot;&gt;&quot;com.123&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.extensionContext?.openURL(url!, completionHandler: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行 你会得到&lt;/p&gt;
&lt;h2 id=&quot;一个错误&quot;&gt;&lt;a href=&quot;#一个错误&quot; class=&quot;headerlink&quot; title=&quot;一个错误&quot;&gt;&lt;/a&gt;一个错误&lt;/h2&gt;&lt;p&gt;&amp;gt;&lt;br&gt;testEExtension[6048:147384] &lt;strong&gt;&lt;em&gt; Terminating app due to uncaught exception ‘NSInvalidArgumentException’, reason: ‘&lt;/em&gt;&lt;/strong&gt; setObjectForKey: object cannot be nil (key: &lt;__nsconcreteuuid 0x7f8ca0513420=&quot;&quot;&gt; 9DB046F6-C18B-44CC-9148-1860D9C35B8F)’&lt;/__nsconcreteuuid&gt;&lt;/p&gt;
&lt;h3 id=&quot;这个问题只在-swift里才有-解决方法是&quot;&gt;&lt;a href=&quot;#这个问题只在-swift里才有-解决方法是&quot; class=&quot;headerlink&quot; title=&quot;这个问题只在 swift里才有, 解决方法是:&quot;&gt;&lt;/a&gt;这个问题只在 swift里才有, 解决方法是:&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在extension的 build setting 的Packaging 里的Defines Module 设置为 YES.&lt;/li&gt;
&lt;li&gt;在info.plist 的 NSExtensionPrincipalClass 前加上模块名 testEExtension.&lt;br&gt;然后编译运行 记得选中Extension 的target&lt;br&gt;最后的效果图:&lt;br&gt;&lt;img src=&quot;result.png&quot; alt=&quot;最后的效果图&quot;&gt;&lt;br&gt;点击 button 也可以打开 Contaier App .结束!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;  可以看到, 做一个 extension 还是很简单的 一起动手做一个吧!&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/ExtensibilityPG/NotificationCenter.html#//apple_ref/doc/uid/TP40014214-CH11-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;wangzz.github.io/blog/2014/06/23/wwdc2014zhi-app-extensionsxue-xi-bi-ji/&quot;&gt;App Extension编程指南 中文版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;onevcat.com/2014/08/notification-today-widget/&quot;&gt;WWDC2014之App Extensions学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.raywenderlich.com/83809/ios-8-today-extension-tutorial&quot;&gt;iOS 8 Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;onevcat.com/2014/08/notification-today-widget/&quot;&gt;WWDC 2014 Session笔记 - iOS 通知中心扩展制作入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.cocoachina.com/ios/20140904/9527.html&quot;&gt;App Extension编程指南（iOS8/OS X v10.10）：扩展类型–Today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.raywenderlich.com/83809/ios-8-today-extension-tutorial&quot;&gt;iOS 8 Today Extension Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;code.tutsplus.com/tutorials/ios-8-creating-a-today-widget--cms-22379&quot;&gt;iOS 8: Creating a Today Widget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.cocoachina.com/industry/20140522/8514.html&quot;&gt;自定义 URL Scheme 完全指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;blog.sina.com.cn/s/blog_407fb5bc01013v6s.html&quot;&gt;iOS Framework制作全攻略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20140904/9527.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/ios/20140904/9527.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.toptal.com/ios/ios-8-app-extensions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.toptal.com/ios/ios-8-app-extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/UserExperience/Conceptual/MobileHIG/AppExtensions.html#//apple_ref/doc/uid/TP40006556-CH67-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/library/prerelease/ios/documentation/UserExperience/Conceptual/MobileHIG/AppExtensions.html#//apple_ref/doc/uid/TP40006556-CH67-SW1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文重点介绍Today Extension的机制，并通过一个Demo讲解整个实现过程。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Android技术周刊第5期</title>
    <link href="http://yoursite.com/2016/02/29/android-technology-magazine-5/"/>
    <id>http://yoursite.com/2016/02/29/android-technology-magazine-5/</id>
    <published>2016-02-28T16:00:00.000Z</published>
    <updated>2016-04-04T13:23:44.000Z</updated>
    
    <content type="html">&lt;p&gt;Linux问他的父亲：你曾经是不是说了一句很牛的话——“talk is cheap,show me the code”? 可是，网络上有那么多好文章，难道都是cheap？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;KnowledgePool&quot;&gt;&lt;a href=&quot;#KnowledgePool&quot; class=&quot;headerlink&quot; title=&quot;KnowledgePool&quot;&gt;&lt;/a&gt;KnowledgePool&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dannylee1991.github.io/2016/03/06/R%E8%AF%AD%E8%A8%80%EF%BC%8802%EF%BC%89%E7%BB%98%E5%9B%BE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;R语言（02）绘图&lt;/a&gt; 以数据为例，来展示R是如何绘制一些图表的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;BestArticle&quot;&gt;&lt;a href=&quot;#BestArticle&quot; class=&quot;headerlink&quot; title=&quot;BestArticle&quot;&gt;&lt;/a&gt;BestArticle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;amp;mid=401955288&amp;amp;idx=1&amp;amp;sn=cd6e26f8ccecdde318f873b681e33526&amp;amp;scene=1&amp;amp;srcid=0221Ph4me1lUtzTlCrWZr9Qd&amp;amp;key=710a5d99946419d96f6bad88b3d9b42148af956828a1ab147360005f1d8ce222141b3075441ad6914e4e03aae1c61e08&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Facebook如何采集其Android应用性能数据&lt;/a&gt; 数据采集一般都离不开埋点插桩，本文介绍了Facebook的插桩方法，他们在考察了Android内建的Debug以及另一些方法后，选择了字节码重写技术，避免了手工插桩的劳动，且性能损失降到最低。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.nimbledroid.com/2016/02/23/slow-Android-reflection-zh.html?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Android中使用反射到底有多慢？&lt;/a&gt; 反射（Reflection）在Java和安卓开发过程中非常有用，但是反射的使用往往是APP严重性能问题的根本原因。本文通过分析几个真实的案例来帮助我们更直观的理解这个问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://m.flipboard.cn/share?url=http%3A%2F%2Fwww.woshipm.com%2Fpd%2F288577.html&amp;amp;social=wechat&amp;amp;deviceType=iphone&amp;amp;udid=1a7e888b83c9d71f07661d96cbcefc6d4cee48ae&amp;amp;userid=9485132&amp;amp;item_id=flipboard-zqeL0MIJQdyQ4ZDB8TeZUQ%3Aa%3A184483403-1456458776&amp;amp;section_id=flipboard%2Fcurator%252Fmagazine%252FcqZO7hBRSyar44MVxPeEGw%253Am%253A184483403&amp;amp;from=groupmessage&amp;amp;isappinstalled=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;那些开发者需要了解的设计基本原则&lt;/a&gt;&lt;br&gt;干净的 UI 和干净的代码一样。 它是组织好的、一致的而且进无止境。一个设计师的好言劝告，墙裂推荐认真阅读&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://android-developers.blogspot.jp/2016/02/android-support-library-232.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Support Library 23.2&lt;/a&gt; Design Lib又更新了，这次更新的不少，鼓掌~~~&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI3MTEzMDI2MA==&amp;amp;mid=405597000&amp;amp;idx=1&amp;amp;sn=5c86631ff95644fdbefa36c4f57ee71d&amp;amp;scene=1&amp;amp;srcid=03010lwFKKs4GuGWyDPZxAvL&amp;amp;key=710a5d99946419d91ed1eea3be59088184f016b794b9c83c7f70d1f63ff0f375ea90497700ca962c987af51fa4cb68e6&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 开发的那些坑和小技巧&lt;/a&gt;  知道一些坑，了解一些小技巧，会让你的开发事半功倍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;amp;mid=402380504&amp;amp;idx=1&amp;amp;sn=7013f0842867a21555adcf445c7c03ee&amp;amp;scene=1&amp;amp;srcid=0302DAWQ0vmV7ZGLuIEspz3a&amp;amp;key=710a5d99946419d953f7ab50fbe10d553fe0056e641560956a071c0399784f002970d8240a67c3044ffd60e747b17498&amp;amp;ascene=0&amp;amp;uin=MjI1NTE5NDA2Mw%3D%3D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android APK终极瘦身21招&lt;/a&gt; Android安装包瘦身指南&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;DevTools&quot;&gt;&lt;a href=&quot;#DevTools&quot; class=&quot;headerlink&quot; title=&quot;DevTools&quot;&gt;&lt;/a&gt;DevTools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/wzy5223/p/5249135.html#rd?sukey=a76cdd086edb4fce9caa869883652f46cb9f65f1b7d189c32ea134656985a193edfde760d0453ffb5f7310b0036ca2ca&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jenkins 2.0 要来了&lt;/a&gt; Jenkins 在2016/02/29日发布了2.0 alpha版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;FantasticLibs&quot;&gt;&lt;a href=&quot;#FantasticLibs&quot; class=&quot;headerlink&quot; title=&quot;FantasticLibs&quot;&gt;&lt;/a&gt;FantasticLibs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geeeeeeeeek/electronic-wechat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开源 Mac 微信客户端&lt;/a&gt;  纯js手工打磨:A better WeChat client on Mac OS X and Linux.(同一作者下，WeChatLuckyMoney微信抢红包插件)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Linux问他的父亲：你曾经是不是说了一句很牛的话——“talk is cheap,show me the code”? 可是，网络上有那么多好文章，难道都是cheap？&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android技术周刊" scheme="http://yoursite.com/tags/Android%E6%8A%80%E6%9C%AF%E5%91%A8%E5%88%8A/"/>
    
  </entry>
  
</feed>
